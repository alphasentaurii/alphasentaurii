I"vž<p>The spacekit.computer class is for generating predictions and evaluating model metrics. The example here evaluates a neural network for classifying stars with orbiting exoplanets using time series signal analysis (light curves).</p>

<h2 id="spacekitcomputer">spacekit.computer</h2>

<p>class methods:</p>

<ul>
  <li>get_preds: generate class predictions from model</li>
  <li>fnfp: count of false negatives and false positives</li>
  <li>keras_history: Keras history plots</li>
  <li>fusion_matrix: customized multi-class confusion matrix</li>
  <li>roc_plots: Receiver Operator Characteristic plots</li>
  <li>compute: model evaluation metrics summary</li>
</ul>

<h3 id="get_preds">get_preds</h3>
<p>generate class predictions from model</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_preds</span><span class="p">(</span><span class="n">X</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">model</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">verbose</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">model</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">model</span><span class="o">=</span><span class="n">model</span>
    <span class="c1"># class predictions 
</span>    <span class="n">y_true</span> <span class="o">=</span> <span class="n">y</span><span class="p">.</span><span class="n">flatten</span><span class="p">()</span>
    
    <span class="n">y_pred</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">predict_classes</span><span class="p">(</span><span class="n">X</span><span class="p">).</span><span class="n">flatten</span><span class="p">()</span> 
    <span class="n">preds</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">y_pred</span><span class="p">).</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    
    <span class="k">if</span> <span class="n">verbose</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"y_pred:</span><span class="se">\n</span><span class="s"> </span><span class="si">{</span><span class="n">preds</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">y_true</span><span class="p">,</span> <span class="n">y_pred</span>
</code></pre></div></div>

<h3 id="fnfp">fnfp</h3>
<p>count of false negatives and false positives</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">fnfp</span><span class="p">(</span><span class="n">X</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">model</span><span class="p">,</span> <span class="n">training</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>

    <span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

    <span class="n">y_pred</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">round</span><span class="p">(</span> <span class="n">model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X</span><span class="p">)</span> <span class="p">)</span>

    <span class="n">pos_idx</span> <span class="o">=</span> <span class="n">y</span><span class="o">==</span><span class="mi">1</span>
    <span class="n">neg_idx</span> <span class="o">=</span> <span class="n">y</span><span class="o">==</span><span class="mi">0</span>

    <span class="c1">#tp = np.sum(y_pred[pos_idx]==1)/y_pred.shape[0]
</span>    <span class="n">fn</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">y_pred</span><span class="p">[</span><span class="n">pos_idx</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="o">/</span><span class="n">y_pred</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

    <span class="c1">#tn = np.sum(y_pred[neg_idx]==0)/y_pred.shape[0]
</span>    <span class="n">fp</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">y_pred</span><span class="p">[</span><span class="n">neg_idx</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">y_pred</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

    <span class="k">if</span> <span class="n">training</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"FN Rate (Training): </span><span class="si">{</span><span class="nb">round</span><span class="p">(</span><span class="n">fn</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="si">}</span><span class="s">%"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"FP Rate (Training): </span><span class="si">{</span><span class="nb">round</span><span class="p">(</span><span class="n">fp</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="si">}</span><span class="s">%"</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"FN Rate (Test): </span><span class="si">{</span><span class="nb">round</span><span class="p">(</span><span class="n">fn</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="si">}</span><span class="s">%"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"FP Rate (Test): </span><span class="si">{</span><span class="nb">round</span><span class="p">(</span><span class="n">fp</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="si">}</span><span class="s">%"</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="keras_history">keras_history</h3>
<p>Keras history plots</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">keras_history</span><span class="p">(</span><span class="n">history</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">4</span><span class="p">)):</span>
    <span class="s">"""
    side by side sublots of training val accuracy and loss (left and right respectively)
    """</span>
    
    <span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
    
    <span class="n">fig</span><span class="p">,</span><span class="n">axes</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">ncols</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
    <span class="n">axes</span> <span class="o">=</span> <span class="n">axes</span><span class="p">.</span><span class="n">flatten</span><span class="p">()</span>

    <span class="n">ax</span> <span class="o">=</span> <span class="n">axes</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'accuracy'</span><span class="p">])</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'val_accuracy'</span><span class="p">])</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Model Accuracy'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'Accuracy'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">'Epoch'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">([</span><span class="s">'Train'</span><span class="p">,</span> <span class="s">'Test'</span><span class="p">],</span> <span class="n">loc</span><span class="o">=</span><span class="s">'upper left'</span><span class="p">)</span>

    <span class="n">ax</span> <span class="o">=</span> <span class="n">axes</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'loss'</span><span class="p">])</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'val_loss'</span><span class="p">])</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Model Loss'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'Loss'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">'Epoch'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">([</span><span class="s">'Train'</span><span class="p">,</span> <span class="s">'Test'</span><span class="p">],</span> <span class="n">loc</span><span class="o">=</span><span class="s">'upper left'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="fusion_matrix">fusion_matrix</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">fusion_matrix</span><span class="p">(</span><span class="n">matrix</span><span class="p">,</span> <span class="n">classes</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">normalize</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="s">'Fusion Matrix'</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'Blues'</span><span class="p">,</span>
    <span class="n">print_raw</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span> 
    <span class="s">"""
    FUSION MATRIX!
    -------------
    It's like a confusion matrix...without the confusion.
    
    matrix: can pass in matrix or a tuple (ytrue,ypred) to create on the fly 
    classes: class names for target variables
    """</span>
    <span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">metrics</span>                       
    <span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">confusion_matrix</span> <span class="c1">#ugh
</span>    <span class="kn">import</span> <span class="nn">itertools</span>
    <span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
    <span class="kn">import</span> <span class="nn">matplotlib</span> <span class="k">as</span> <span class="n">mpl</span>
    <span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
    
    <span class="c1"># make matrix if tuple passed to matrix:
</span>    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">matrix</span><span class="p">,</span> <span class="nb">tuple</span><span class="p">):</span>
        <span class="n">y_true</span> <span class="o">=</span> <span class="n">matrix</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">copy</span><span class="p">()</span>
        <span class="n">y_pred</span> <span class="o">=</span> <span class="n">matrix</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">copy</span><span class="p">()</span>
        
        <span class="k">if</span> <span class="n">y_true</span><span class="p">.</span><span class="n">ndim</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">:</span>
            <span class="n">y_true</span> <span class="o">=</span> <span class="n">y_true</span><span class="p">.</span><span class="n">argmax</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">y_pred</span><span class="p">.</span><span class="n">ndim</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">:</span>
            <span class="n">y_pred</span> <span class="o">=</span> <span class="n">y_pred</span><span class="p">.</span><span class="n">argmax</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">fusion</span> <span class="o">=</span> <span class="n">metrics</span><span class="p">.</span><span class="n">confusion_matrix</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">fusion</span> <span class="o">=</span> <span class="n">matrix</span>
    
    <span class="c1"># INTEGER LABELS
</span>    <span class="k">if</span> <span class="n">classes</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">classes</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">matrix</span><span class="p">)))</span>

    <span class="c1">#NORMALIZING
</span>    <span class="c1"># Check if normalize is set to True
</span>    <span class="c1"># If so, normalize the raw fusion matrix before visualizing
</span>    <span class="k">if</span> <span class="n">normalize</span><span class="p">:</span>
        <span class="n">fusion</span> <span class="o">=</span> <span class="n">fusion</span><span class="p">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float'</span><span class="p">)</span> <span class="o">/</span> <span class="n">fusion</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)[:,</span> <span class="n">np</span><span class="p">.</span><span class="n">newaxis</span><span class="p">]</span>
        <span class="n">thresh</span> <span class="o">=</span> <span class="mf">0.5</span>
        <span class="n">fmt</span><span class="o">=</span><span class="s">'.2f'</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">fmt</span><span class="o">=</span><span class="s">'d'</span>
        <span class="n">thresh</span> <span class="o">=</span> <span class="n">fusion</span><span class="p">.</span><span class="nb">max</span><span class="p">()</span> <span class="o">/</span> <span class="mf">2.</span>
    
    <span class="c1"># PLOT
</span>    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">fusion</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">cmap</span><span class="p">,</span> <span class="n">aspect</span><span class="o">=</span><span class="s">'equal'</span><span class="p">)</span>
    
    <span class="c1"># Add title and axis labels 
</span>    <span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="n">title</span><span class="p">)</span> 
    <span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'TRUE'</span><span class="p">)</span> 
    <span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'PRED'</span><span class="p">)</span>
    
    <span class="c1"># Add appropriate axis scales
</span>    <span class="n">tick_marks</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">classes</span><span class="p">))</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">tick_marks</span><span class="p">,</span> <span class="n">classes</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">yticks</span><span class="p">(</span><span class="n">tick_marks</span><span class="p">,</span> <span class="n">classes</span><span class="p">)</span>
    <span class="c1">#ax.set_ylim(len(fusion), -.5,.5) ## &lt;-- This was messing up the plots!
</span>    
    <span class="c1"># Text formatting
</span>    <span class="n">fmt</span> <span class="o">=</span> <span class="s">'.2f'</span> <span class="k">if</span> <span class="n">normalize</span> <span class="k">else</span> <span class="s">'d'</span>
    <span class="c1"># Add labels to each cell
</span>    <span class="c1">#thresh = fusion.max() / 2.
</span>    <span class="c1"># iterate thru matrix and append labels  
</span>    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">itertools</span><span class="p">.</span><span class="n">product</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="n">fusion</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="nb">range</span><span class="p">(</span><span class="n">fusion</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])):</span>
        <span class="n">plt</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="nb">format</span><span class="p">(</span><span class="n">fusion</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">],</span> <span class="n">fmt</span><span class="p">),</span>
                <span class="n">horizontalalignment</span><span class="o">=</span><span class="s">'center'</span><span class="p">,</span>
                <span class="n">color</span><span class="o">=</span><span class="s">'white'</span> <span class="k">if</span> <span class="n">fusion</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">thresh</span> <span class="k">else</span> <span class="s">'black'</span><span class="p">,</span>
                <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">,</span> <span class="n">weight</span><span class="o">=</span><span class="s">'bold'</span><span class="p">)</span>
    
    <span class="c1"># Add a legend
</span>    <span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">()</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span> 
    <span class="k">return</span> <span class="n">fusion</span><span class="p">,</span> <span class="n">fig</span>
</code></pre></div></div>

<h3 id="roc_plots">roc_plots</h3>
<p>Receiver Operator Characteristic plots</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">roc_plots</span><span class="p">(</span><span class="n">X</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">model</span><span class="p">):</span>
    <span class="s">"""Calculates ROC_AUC score and plots Receiver Operator Characteristics (ROC)

    Arguments:
        X {feature set} -- typically X_test
        y {labels} -- typically y_test
        model {classifier} -- the model name for which you are calculting roc score

    Returns:
        roc -- roc_auc_score (via sklearn)
    """</span>
    <span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">metrics</span>
    <span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">roc_curve</span><span class="p">,</span> <span class="n">roc_auc_score</span><span class="p">,</span> <span class="n">accuracy_score</span>

    <span class="n">y_true</span> <span class="o">=</span> <span class="n">y</span><span class="p">.</span><span class="n">flatten</span><span class="p">()</span>
    <span class="n">y_hat</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>

    <span class="n">fpr</span><span class="p">,</span> <span class="n">tpr</span><span class="p">,</span> <span class="n">thresholds</span> <span class="o">=</span> <span class="n">roc_curve</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span> <span class="n">y_hat</span><span class="p">)</span> 

    <span class="c1"># Threshold Cutoff for predictions
</span>    <span class="n">crossover_index</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">min</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">where</span><span class="p">(</span><span class="mf">1.</span><span class="o">-</span><span class="n">fpr</span> <span class="o">&lt;=</span> <span class="n">tpr</span><span class="p">))</span>
    <span class="n">crossover_cutoff</span> <span class="o">=</span> <span class="n">thresholds</span><span class="p">[</span><span class="n">crossover_index</span><span class="p">]</span>
    <span class="n">crossover_specificity</span> <span class="o">=</span> <span class="mf">1.</span><span class="o">-</span><span class="n">fpr</span><span class="p">[</span><span class="n">crossover_index</span><span class="p">]</span>

    <span class="n">fig</span><span class="p">,</span><span class="n">axes</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">ncols</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
    <span class="n">axes</span> <span class="o">=</span> <span class="n">axes</span><span class="p">.</span><span class="n">flatten</span><span class="p">()</span>

    <span class="n">ax</span><span class="o">=</span><span class="n">axes</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">thresholds</span><span class="p">,</span> <span class="mf">1.</span><span class="o">-</span><span class="n">fpr</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">thresholds</span><span class="p">,</span> <span class="n">tpr</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">"Crossover at {0:.2f}, Specificity {1:.2f}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">crossover_cutoff</span><span class="p">,</span> <span class="n">crossover_specificity</span><span class="p">))</span>

    <span class="n">ax</span><span class="o">=</span><span class="n">axes</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fpr</span><span class="p">,</span> <span class="n">tpr</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">"ROC area under curve: {0:.2f}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">roc_auc_score</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span> <span class="n">y_hat</span><span class="p">)))</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
    
    <span class="n">roc</span> <span class="o">=</span> <span class="n">roc_auc_score</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span><span class="n">y_hat</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">roc</span>

</code></pre></div></div>

<h3 id="compute">compute</h3>
<p>model evaluation metrics summary</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">compute</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">hist</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">preds</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">summary</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">fusion</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> 
            <span class="n">classes</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">report</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">roc</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
    <span class="s">"""
    evaluates model predictions and stores the output in a dict
    returns `results`
    """</span>
    <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
    <span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
    <span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">metrics</span>
    <span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">jaccard_score</span><span class="p">,</span><span class="n">accuracy_score</span><span class="p">,</span> <span class="n">recall_score</span><span class="p">,</span> <span class="n">fowlkes_mallows_score</span>

    <span class="c1"># initialize a spare improbability drive
</span>    <span class="n">res</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="n">res</span><span class="p">[</span><span class="s">'model'</span><span class="p">]</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">name</span>
    
    <span class="c1"># class predictions 
</span>    <span class="k">if</span> <span class="n">preds</span><span class="p">:</span>
        <span class="n">y_true</span> <span class="o">=</span> <span class="n">y</span><span class="p">.</span><span class="n">flatten</span><span class="p">()</span>
        <span class="n">y_pred</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">predict_classes</span><span class="p">(</span><span class="n">X</span><span class="p">).</span><span class="n">flatten</span><span class="p">()</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'preds'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">y_pred</span><span class="p">]</span>

    <span class="k">if</span> <span class="n">summary</span><span class="p">:</span>
        <span class="n">summary</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">summary</span><span class="p">()</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'summary'</span><span class="p">]</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">summary</span>


    <span class="c1"># FUSION MATRIX
</span>    <span class="k">if</span> <span class="n">fusion</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">classes</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">classes</span><span class="o">=</span><span class="nb">set</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>
            <span class="c1">#classes=['0','1']
</span>        <span class="k">else</span><span class="p">:</span>
            <span class="n">classes</span><span class="o">=</span><span class="n">classes</span>
        <span class="c1"># Plot fusion matrix
</span>        <span class="n">FM</span> <span class="o">=</span> <span class="n">fusion_matrix</span><span class="p">(</span><span class="n">matrix</span><span class="o">=</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span><span class="n">y_pred</span><span class="p">),</span> 
                                    <span class="n">classes</span><span class="o">=</span><span class="n">classes</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'FM'</span><span class="p">]</span> <span class="o">=</span> <span class="n">FM</span>

    <span class="c1"># ROC Area Under Curve
</span>    <span class="k">if</span> <span class="n">roc</span><span class="p">:</span>
        <span class="n">ROC</span> <span class="o">=</span> <span class="n">roc_plots</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">model</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'ROC'</span><span class="p">]</span> <span class="o">=</span> <span class="n">ROC</span>

    <span class="c1"># CLASSIFICATION REPORT
</span>    <span class="k">if</span> <span class="n">report</span><span class="p">:</span>
        <span class="n">num_dashes</span><span class="o">=</span><span class="mi">20</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'---'</span><span class="o">*</span><span class="n">num_dashes</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\t</span><span class="s">CLASSIFICATION REPORT:'</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'---'</span><span class="o">*</span><span class="n">num_dashes</span><span class="p">)</span>
        <span class="c1"># generate report
</span>        <span class="n">report</span> <span class="o">=</span> <span class="n">metrics</span><span class="p">.</span><span class="n">classification_report</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span><span class="n">y_pred</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'report'</span><span class="p">]</span> <span class="o">=</span> <span class="n">report</span>
        <span class="k">print</span><span class="p">(</span><span class="n">report</span><span class="p">)</span>


    <span class="c1"># save to dict:
</span>    <span class="n">res</span><span class="p">[</span><span class="s">'jaccard'</span><span class="p">]</span> <span class="o">=</span> <span class="n">jaccard_score</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>
    <span class="n">res</span><span class="p">[</span><span class="s">'fowlkes'</span><span class="p">]</span> <span class="o">=</span> <span class="n">fowlkes_mallows_score</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span><span class="n">y_pred</span><span class="p">)</span>
    <span class="n">res</span><span class="p">[</span><span class="s">'accuracy'</span><span class="p">]</span> <span class="o">=</span> <span class="n">accuracy_score</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>
    <span class="n">res</span><span class="p">[</span><span class="s">'recall'</span><span class="p">]</span> <span class="o">=</span> <span class="n">recall_score</span><span class="p">(</span><span class="n">y_true</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>
    
    <span class="c1">#Plot Model Training Results (PLOT KERAS HISTORY)
</span>    <span class="k">if</span> <span class="n">hist</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">HIST</span> <span class="o">=</span> <span class="n">keras_history</span><span class="p">(</span><span class="n">hist</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'HIST'</span><span class="p">]</span> <span class="o">=</span> <span class="n">HIST</span>

    <span class="k">return</span> <span class="n">res</span>


</code></pre></div></div>

<h1 id="summary">Summary</h1>

<p><code class="language-plaintext highlighter-rouge">spacekit</code> is a PyPi Machine Learning Utility Package for Astrophysical Data Science. This library is for performing signal analysis and machine learning on astrophysical datasets.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                       
           <span class="o">/</span>\    <span class="n">_</span>       <span class="n">_</span>                           <span class="n">_</span>                      <span class="o">*</span>  
<span class="o">/</span>\<span class="n">_</span><span class="o">/</span>\<span class="n">_____</span><span class="o">/</span>  \<span class="n">__</span><span class="o">|</span> <span class="o">|</span><span class="n">_____</span><span class="o">|</span> <span class="o">|</span><span class="n">_________________________</span><span class="o">|</span> <span class="o">|</span><span class="n">___________________</span><span class="o">*</span><span class="n">___</span>
<span class="p">[</span><span class="o">===</span><span class="p">]</span>    <span class="o">/</span> <span class="o">/</span>\ \ <span class="o">|</span> <span class="o">|</span>  <span class="n">_</span>  <span class="o">|</span>  <span class="n">_</span>  <span class="o">|</span> <span class="n">_</span>  \<span class="o">/</span> <span class="n">__</span><span class="o">/</span> <span class="o">-</span><span class="n">__</span><span class="o">|</span>  \<span class="o">|</span> \<span class="n">_</span>  <span class="n">_</span><span class="o">/</span> <span class="n">_</span>  \ \<span class="n">_</span><span class="o">/</span> <span class="o">|</span> <span class="o">*</span> <span class="n">_</span><span class="o">/|</span> <span class="o">|</span> <span class="o">|</span>
 \<span class="p">.</span><span class="o">/</span>    <span class="o">/</span><span class="n">_</span><span class="o">/</span>  \<span class="n">_</span>\<span class="o">|</span><span class="n">_</span><span class="o">|</span>  <span class="n">___</span><span class="o">|</span><span class="n">_</span><span class="o">|</span> <span class="o">|</span><span class="n">_</span><span class="o">|</span><span class="n">__</span><span class="o">/</span>\<span class="n">_</span>\ \ \<span class="n">____</span><span class="o">|</span><span class="n">_</span><span class="o">|</span>\<span class="n">__</span><span class="o">|</span> \<span class="n">__</span><span class="o">/</span><span class="n">__</span><span class="o">/</span>\<span class="n">_</span>\<span class="n">___</span><span class="o">/|</span><span class="n">_</span><span class="o">|</span>\<span class="n">_</span>\<span class="o">|</span><span class="n">_</span><span class="o">|</span><span class="n">_</span><span class="o">|</span>
                  <span class="o">|</span> <span class="o">/</span>             <span class="o">|</span><span class="n">___</span><span class="o">/</span>        
                  <span class="o">|/</span>   
</code></pre></div></div>
:ET