I"Œ+<p>The <code class="language-plaintext highlighter-rouge">Northwind SQL Database Project</code> demonstrates how to use <code class="language-plaintext highlighter-rouge">SQL queries</code> and <code class="language-plaintext highlighter-rouge">hypothesis testing</code> in order to <code class="language-plaintext highlighter-rouge">recommend business strategies</code> for increasing sales and reducing costs for the fictitious ‚ÄúNorthwind‚Äù company. The Northwind SQL database was created by Microsoft for data scientists to practice SQL queries and hypothesis testing in their analyses.</p>

<p><img src="https://img.shields.io/github/repo-size/alphasentaurii/northwind-sql-database-project" alt="GitHub repo size" />
<img src="https://img.shields.io/github/license/alphasentaurii/northwind-sql-database-project?color=black" alt="GitHub license" /></p>

<p><img src="https://github.com/alphasentaurii/dsc-mod-3-project-online-ds-ft-100719/blob/master/Northwind_ERD_updated.png?raw=true" alt="northwind" /></p>

<h2 id="prerequisites">Prerequisites</h2>

<p>Before you begin, ensure you have met the following requirements:</p>

<ul>
  <li>You have installed the latest version of <code class="language-plaintext highlighter-rouge">Jupyter Notebook</code></li>
  <li>You have a <code class="language-plaintext highlighter-rouge">&lt;Windows/Linux/Mac&gt;</code> machine.</li>
</ul>

<h3 id="fsds---standard-data-science-tools">FSDS - standard data science tools</h3>

<p>You can do a quick install of all the standard data science libraries (matplotlib, pandas, etc) using the FSDS pypi package from <code class="language-plaintext highlighter-rouge">James Irving</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install</span> <span class="nt">-U</span> fsds_100719
</code></pre></div></div>

<h2 id="running-the-northwind-sql-database-project">Running the Northwind SQL Database Project</h2>

<p>To run this project locally, follow these steps:</p>

<p>In the command line/terminal:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/alphasentaurii/northwind-sql-database-project
<span class="nb">cd </span>northwind-sql-database-project
jupyter notebook
</code></pre></div></div>

<h2 id="hypothesis-testing">Hypothesis Testing</h2>

<p>Below are 4 hypotheses (each including a null hypothesis and alternative hypothesis) which I will test for statistical significance to determine if there are any relationships which would be useful from a strategic business perspective. Following this I will summarize the results, make final recommendations, and propose ideas for future analytical work.</p>

<hr />

<h2 id="objectives">Objectives</h2>

<p><strong>H1: Discount and Order Quantity</strong></p>

<p>Does discount amount have a statistically significant effect on order quantity? If so, at what level(s) of discount?</p>

<p><strong>H2: Countries and Order Quantity: Discount vs Full Price</strong></p>

<p>Do order quantities of individual countries differ when discounted vs full price?</p>

<p><strong>H3: Region and Order Revenue</strong></p>

<p>Does region have a statistically significant effect on average revenue per order?</p>

<p><strong>H4: Month and Order Quantity</strong></p>

<p>Does time of year have a statistically significant effect on average revenue per order?</p>

<h2 id="process-outline">Process Outline</h2>

<p>Outline of process I will follow in order to answer questions above:</p>

<p>-Question</p>
<ol>
  <li>Hypotheses</li>
  <li>Exploratory Data Analysis (EDA)</li>
</ol>

<p>-Select dataset
-Group data
-Explore data</p>

<ol>
  <li>
    <p>Assumption Tests:
-Sample size
-Normality and Variance</p>
  </li>
  <li>
    <p>Statistical Tests:
-Statistical test
-Effect size (if necessary)
-Post-hoc tests (if necessary)</p>
  </li>
  <li>
    <p>Summarize Results</p>
  </li>
</ol>

<hr />

<h2 id="statistical-analysis-pipeline">Statistical Analysis Pipeline</h2>

<p>For #3 and #4 above (Assumption and Statistical Tests):</p>

<ol>
  <li>Check if sample sizes allow us to ignore assumptions by visualizing sample size comparisons for two groups (normality check).
    <ul>
      <li>Bar Plot: SEM (Standard Error of the Mean)</li>
    </ul>
  </li>
  <li>If above test fails, check for normality and homogeneity of variance:
    <ul>
      <li>Test Assumption Normality:
        <ul>
          <li>D‚ÄôAgostino-Pearson: scipy.stats.normaltest</li>
          <li>Shapiro-Wilik Test: scipy.stats.shapiro</li>
        </ul>
      </li>
      <li>Test for Homogeneity of Variance:
        <ul>
          <li>Levene‚Äôs Test: scipy.stats.levene)
  Parametric tests (means)	Nonparametric tests (medians)
  1-sample t test	1-sample Sign, 1-sample Wilcoxon
  2-sample t test	Mann-Whitney tes
  One-Way ANOVA	Kruskal-Wallis, Mood‚Äôs median tes
  Factorial DOE with one factor and one blocking variable	Friedman test</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Choose appropriate test based on above
    <ul>
      <li>T Test (1-sample)
        <ul>
          <li><code class="language-plaintext highlighter-rouge">stats.ttest_1samp()</code></li>
        </ul>
      </li>
      <li>T Test (2-sample)
        <ul>
          <li>stats.ttest_ind()</li>
        </ul>
      </li>
      <li>Welch‚Äôs T-Test (2-sample)
        <ul>
          <li>stats.ttest_ind(equal_var=False)</li>
        </ul>
      </li>
      <li>Mann Whitney U
        <ul>
          <li>stats.mannwhitneyu()</li>
        </ul>
      </li>
      <li>ANOVA
        <ul>
          <li>stats.f_oneway()</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Calculate effect size for significant results.
    <ul>
      <li>Effect size:
        <ul>
          <li>cohen‚Äôs d</li>
        </ul>
      </li>
    </ul>

    <p>-Interpretation:</p>
    <ul>
      <li>Small effect = 0.2 ( cannot be seen by naked eye)</li>
      <li>Medium effect = 0.5</li>
      <li>Large Effect = 0.8 (can be seen by naked eye)</li>
    </ul>
  </li>
  <li>If significant, follow up with post-hoc tests (if have more than 2 groups)
    <ul>
      <li>Tukey‚Äôs
        <ul>
          <li>statsmodels.stats.multicomp.pairwise_tukeyhsd</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<h2 id="contact">Contact</h2>

<p>If you want to contact me you can reach me at <a href="mailto:rukeine@gmail.com">rukeine@gmail.com</a>.</p>

<h2 id="license">License</h2>

<p>This project uses the following license: <a href="./LICENSE.md">MIT License</a>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#         _ __ _   _
#  /\_/\ | '__| | | |
#  [===] | |  | |_| |
#   \./  |_|   \__,_|
</span></code></pre></div></div>
<hr />

<h2 id="project-demo">Project Demo</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># connect to database / import data
</span><span class="kn">import</span> <span class="nn">sqlite3</span>
<span class="n">conn</span> <span class="o">=</span> <span class="n">sqlite3</span><span class="p">.</span><span class="n">connect</span><span class="p">(</span><span class="s">'Northwind_small.sqlite'</span><span class="p">)</span>
<span class="n">cur</span> <span class="o">=</span> <span class="n">conn</span><span class="p">.</span><span class="n">cursor</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># function for converting tables into dataframes on the fly
</span><span class="k">def</span> <span class="nf">get_table</span><span class="p">(</span><span class="n">cur</span><span class="p">,</span> <span class="n">table</span><span class="p">):</span>
    <span class="n">cur</span><span class="p">.</span><span class="n">execute</span><span class="p">(</span><span class="sa">f</span><span class="s">"SELECT * from </span><span class="si">{</span><span class="n">table</span><span class="si">}</span><span class="s">;"</span><span class="p">)</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">cur</span><span class="p">.</span><span class="n">fetchall</span><span class="p">())</span>
    <span class="n">df</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="n">desc</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">desc</span> <span class="ow">in</span> <span class="n">cur</span><span class="p">.</span><span class="n">description</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">df</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create dataframe of table names for referencing purposes
</span><span class="n">cur</span><span class="p">.</span><span class="n">execute</span><span class="p">(</span><span class="s">"""SELECT name from sqlite_master WHERE type='table';"""</span><span class="p">)</span>
<span class="n">df_tables</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">cur</span><span class="p">.</span><span class="n">fetchall</span><span class="p">(),</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'Table'</span><span class="p">])</span>
<span class="n">df_tables</span>
</code></pre></div></div>

<html>
<body>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Table</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>Employee</td>
    </tr>
    <tr>
      <td>1</td>
      <td>Category</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Customer</td>
    </tr>
    <tr>
      <td>3</td>
      <td>Shipper</td>
    </tr>
    <tr>
      <td>4</td>
      <td>Supplier</td>
    </tr>
    <tr>
      <td>5</td>
      <td>Order</td>
    </tr>
    <tr>
      <td>6</td>
      <td>Product</td>
    </tr>
    <tr>
      <td>7</td>
      <td>OrderDetail</td>
    </tr>
    <tr>
      <td>8</td>
      <td>CustomerCustomerDemo</td>
    </tr>
    <tr>
      <td>9</td>
      <td>CustomerDemographic</td>
    </tr>
    <tr>
      <td>10</td>
      <td>Region</td>
    </tr>
    <tr>
      <td>11</td>
      <td>Territory</td>
    </tr>
    <tr>
      <td>12</td>
      <td>EmployeeTerritory</td>
    </tr>
  </tbody>
</table>
&lt;/div&gt;
</body>
</html>

<h1 id="h1-discountquantity">H1: Discount‚ÄìQuantity</h1>

<ul>
  <li>Does discount amount have a statistically significant effect on the quantity of a product in an order?</li>
  <li>If so, at what level(s) of discount?</li>
</ul>

<h2 id="hypotheses">Hypotheses</h2>
<ul>
  <li>$H_0$: Discount amount has no relationship with the quantity of a product in an order.</li>
  <li>
    <p>$H_A$: Discount amount has a statistically significant effect on the quantity in an order.</p>
  </li>
  <li>$\alpha$=0.05</li>
</ul>

<h2 id="eda">EDA</h2>
<p>Select the proper dataset for analysis, perform EDA, and generate data groups for testing.</p>

<h3 id="select-dataset">Select dataset</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_orderDetail</span> <span class="o">=</span> <span class="n">get_table</span><span class="p">(</span><span class="n">cur</span><span class="p">,</span> <span class="s">'OrderDetail'</span><span class="p">)</span>
<span class="n">df_orderDetail</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>
<html>
<body>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Id</th>
      <th>OrderId</th>
      <th>ProductId</th>
      <th>UnitPrice</th>
      <th>Quantity</th>
      <th>Discount</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>10248/11</td>
      <td>10248</td>
      <td>11</td>
      <td>14.0</td>
      <td>12</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>1</td>
      <td>10248/42</td>
      <td>10248</td>
      <td>42</td>
      <td>9.8</td>
      <td>10</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>2</td>
      <td>10248/72</td>
      <td>10248</td>
      <td>72</td>
      <td>34.8</td>
      <td>5</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>3</td>
      <td>10249/14</td>
      <td>10249</td>
      <td>14</td>
      <td>18.6</td>
      <td>9</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>4</td>
      <td>10249/51</td>
      <td>10249</td>
      <td>51</td>
      <td>42.4</td>
      <td>40</td>
      <td>0.0</td>
    </tr>
  </tbody>
</table>
</div>
</body>
</html>

<h3 id="group">Group</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># check value counts for each level of discount
</span><span class="n">df_orderDetail</span><span class="p">[</span><span class="s">'Discount'</span><span class="p">].</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.00    1317
0.05     185
0.10     173
0.20     161
0.15     157
0.25     154
0.03       3
0.02       2
0.01       1
0.04       1
0.06       1
Name: Discount, dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># insert boolean column showing whether or not an order was discounted
</span><span class="n">df_orderDetail</span><span class="p">[</span><span class="s">'discounted'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">where</span><span class="p">(</span><span class="n">df_orderDetail</span><span class="p">[</span><span class="s">'Discount'</span><span class="p">]</span> <span class="o">==</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>

<span class="c1"># compare number of discount vs fullprice orders
</span><span class="n">df_orderDetail</span><span class="p">[</span><span class="s">'discounted'</span><span class="p">].</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0    1317
1     838
Name: discounted, dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># split orders into two groups (series): discount and fullprice order quantity
</span><span class="n">fullprice</span> <span class="o">=</span> <span class="n">df_orderDetail</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'discounted'</span><span class="p">).</span><span class="n">get_group</span><span class="p">(</span><span class="mi">0</span><span class="p">)[</span><span class="s">'Quantity'</span><span class="p">]</span>
<span class="n">discount</span> <span class="o">=</span> <span class="n">df_orderDetail</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'discounted'</span><span class="p">).</span><span class="n">get_group</span><span class="p">(</span><span class="mi">1</span><span class="p">)[</span><span class="s">'Quantity'</span><span class="p">]</span>
</code></pre></div></div>

<h3 id="explore">Explore</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">diff</span> <span class="o">=</span> <span class="p">(</span><span class="n">discount</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span> <span class="o">-</span> <span class="n">fullprice</span><span class="p">.</span><span class="n">mean</span><span class="p">())</span>
<span class="n">diff</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>5.394523243866239
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># visually inspect differences in mean and StDev of distributions
</span><span class="n">sns</span><span class="p">.</span><span class="n">set_style</span><span class="p">(</span><span class="s">"whitegrid"</span><span class="p">)</span>
<span class="o">%</span><span class="n">config</span> <span class="n">InlineBackend</span><span class="p">.</span><span class="n">figure_format</span><span class="o">=</span><span class="s">'retina'</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>

<span class="n">ax</span><span class="p">.</span><span class="n">axvline</span><span class="p">(</span><span class="n">fullprice</span><span class="p">.</span><span class="n">mean</span><span class="p">(),</span> <span class="n">color</span><span class="o">=</span><span class="s">'blue'</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s">'--'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'FP Avg'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">axvline</span><span class="p">(</span><span class="n">discount</span><span class="p">.</span><span class="n">mean</span><span class="p">(),</span> <span class="n">color</span><span class="o">=</span><span class="s">'orange'</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="s">'--'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'DC Avg'</span><span class="p">)</span>

<span class="n">fdict</span> <span class="o">=</span> <span class="p">{</span><span class="s">'fontfamily'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span><span class="s">'fontsize'</span><span class="p">:</span> <span class="mi">16</span><span class="p">}</span>

<span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">fullprice</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span> <span class="n">hist</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">kde</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'blue'</span><span class="p">)</span>
<span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">discount</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span> <span class="n">hist</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">kde</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'orange'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">([</span><span class="s">'Full Price'</span><span class="p">,</span> <span class="s">'Discount'</span><span class="p">])</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">"Distribution of Full Price vs Discount Order Quantity"</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">fdict</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Distribution of Full Price vs Discount Order Quantity')
</code></pre></div></div>

<p><img src="output_25_1.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Discount'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Quantity'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_orderDetail</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Discount Levels and Order Qty'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'family'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">16</span><span class="p">})</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Discount Levels and Order Qty')
</code></pre></div></div>

<p><img src="output_26_1.png" alt="png" /></p>

<p>We can already see that there is a clear relationship between order quantity and specific discount levels before running any statistical tests. However, what is more interesting to note from the visualization above is that the discount levels that DO have an effect appear to be very similar as far as the mean order quantity. The indication is that discount amount produces diminishing returns (offering a discount higher than 5% - the minimum effective amount - does not actually produce higher order quantity which means we are losing revenue we would have otherwise captured).</p>

<h2 id="assumption-tests">Assumption Tests</h2>
<p><strong>Select the appropriate t-test based on tests for the assumptions of normality and homogeneity of variance.</strong></p>

<h3 id="sample-size">Sample Size</h3>
<p>Check if sample sizes allow us to ignore assumptions; if not, test assumption normality.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># visualize sample size comparisons for two groups (normality check)
</span><span class="kn">import</span> <span class="nn">scipy.stats</span> <span class="k">as</span> <span class="n">stat</span>
<span class="n">plt</span><span class="p">.</span><span class="n">bar</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Full Price'</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="n">fullprice</span><span class="p">.</span><span class="n">mean</span><span class="p">(),</span> <span class="n">yerr</span><span class="o">=</span><span class="n">stat</span><span class="p">.</span><span class="n">sem</span><span class="p">(</span><span class="n">fullprice</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">bar</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Discount'</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="n">discount</span><span class="p">.</span><span class="n">mean</span><span class="p">(),</span> <span class="n">yerr</span><span class="o">=</span><span class="n">stat</span><span class="p">.</span><span class="n">sem</span><span class="p">(</span><span class="n">discount</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">"Order Quantity Sample Sizes: Full Price vs Discount"</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Order Quantity Sample Sizes: Full Price vs Discount')
</code></pre></div></div>

<p><img src="output_30_1.png" alt="png" /></p>

<h3 id="normality-test">Normality Test</h3>
<p>Check assumptions of normality and homogeneity of variance</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Test for normality - D'Agostino-Pearson's normality test: scipy.stats.normaltest
</span><span class="n">stat</span><span class="p">.</span><span class="n">normaltest</span><span class="p">(</span><span class="n">fullprice</span><span class="p">),</span> <span class="n">stat</span><span class="p">.</span><span class="n">normaltest</span><span class="p">(</span><span class="n">discount</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(NormaltestResult(statistic=544.5770045551502, pvalue=5.579637380545965e-119),
 NormaltestResult(statistic=261.528012299789, pvalue=1.6214878452829618e-57))
</code></pre></div></div>

<p>Failed normality test (p-values &lt; 0.05). Run non-parametric test:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Run non-parametric test (since normality test failed)
</span><span class="n">stat</span><span class="p">.</span><span class="n">mannwhitneyu</span><span class="p">(</span><span class="n">fullprice</span><span class="p">,</span> <span class="n">discount</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MannwhitneyuResult(statistic=461541.0, pvalue=6.629381826999866e-11)
</code></pre></div></div>

<h3 id="statistical-test">Statistical Test</h3>
<p>Perform chosen statistical test.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># run tukey test for OQD (Order Quantity Discount) 
</span><span class="n">data</span> <span class="o">=</span> <span class="n">df_orderDetail</span><span class="p">[</span><span class="s">'Quantity'</span><span class="p">].</span><span class="n">values</span>
<span class="n">labels</span> <span class="o">=</span> <span class="n">df_orderDetail</span><span class="p">[</span><span class="s">'Discount'</span><span class="p">].</span><span class="n">values</span>

<span class="kn">import</span> <span class="nn">statsmodels.api</span> <span class="k">as</span> <span class="n">sms</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">sms</span><span class="p">.</span><span class="n">stats</span><span class="p">.</span><span class="n">multicomp</span><span class="p">.</span><span class="n">pairwise_tukeyhsd</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="n">labels</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># save OQD tukey test model results into dataframe (OQD: order quantity discount)
</span><span class="n">tukey_OQD</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">model</span><span class="p">.</span><span class="n">_results_table</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="n">columns</span><span class="o">=</span><span class="n">model</span><span class="p">.</span><span class="n">_results_table</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="n">tukey_OQD</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>group1</th>
      <th>group2</th>
      <th>meandiff</th>
      <th>p-adj</th>
      <th>lower</th>
      <th>upper</th>
      <th>reject</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>0.0</td>
      <td>0.01</td>
      <td>-19.7153</td>
      <td>0.9</td>
      <td>-80.3306</td>
      <td>40.9001</td>
      <td>False</td>
    </tr>
    <tr>
      <td>1</td>
      <td>0.0</td>
      <td>0.02</td>
      <td>-19.7153</td>
      <td>0.9</td>
      <td>-62.593</td>
      <td>23.1625</td>
      <td>False</td>
    </tr>
    <tr>
      <td>2</td>
      <td>0.0</td>
      <td>0.03</td>
      <td>-20.0486</td>
      <td>0.725</td>
      <td>-55.0714</td>
      <td>14.9742</td>
      <td>False</td>
    </tr>
    <tr>
      <td>3</td>
      <td>0.0</td>
      <td>0.04</td>
      <td>-20.7153</td>
      <td>0.9</td>
      <td>-81.3306</td>
      <td>39.9001</td>
      <td>False</td>
    </tr>
    <tr>
      <td>4</td>
      <td>0.0</td>
      <td>0.05</td>
      <td>6.2955</td>
      <td>0.0011</td>
      <td>1.5381</td>
      <td>11.053</td>
      <td>True</td>
    </tr>
    <tr>
      <td>5</td>
      <td>0.0</td>
      <td>0.06</td>
      <td>-19.7153</td>
      <td>0.9</td>
      <td>-80.3306</td>
      <td>40.9001</td>
      <td>False</td>
    </tr>
    <tr>
      <td>6</td>
      <td>0.0</td>
      <td>0.1</td>
      <td>3.5217</td>
      <td>0.4269</td>
      <td>-1.3783</td>
      <td>8.4217</td>
      <td>False</td>
    </tr>
    <tr>
      <td>7</td>
      <td>0.0</td>
      <td>0.15</td>
      <td>6.6669</td>
      <td>0.0014</td>
      <td>1.551</td>
      <td>11.7828</td>
      <td>True</td>
    </tr>
    <tr>
      <td>8</td>
      <td>0.0</td>
      <td>0.2</td>
      <td>5.3096</td>
      <td>0.0303</td>
      <td>0.2508</td>
      <td>10.3684</td>
      <td>True</td>
    </tr>
    <tr>
      <td>9</td>
      <td>0.0</td>
      <td>0.25</td>
      <td>6.525</td>
      <td>0.0023</td>
      <td>1.3647</td>
      <td>11.6852</td>
      <td>True</td>
    </tr>
    <tr>
      <td>10</td>
      <td>0.01</td>
      <td>0.02</td>
      <td>0.0</td>
      <td>0.9</td>
      <td>-74.2101</td>
      <td>74.2101</td>
      <td>False</td>
    </tr>
    <tr>
      <td>11</td>
      <td>0.01</td>
      <td>0.03</td>
      <td>-0.3333</td>
      <td>0.9</td>
      <td>-70.2993</td>
      <td>69.6326</td>
      <td>False</td>
    </tr>
    <tr>
      <td>12</td>
      <td>0.01</td>
      <td>0.04</td>
      <td>-1.0</td>
      <td>0.9</td>
      <td>-86.6905</td>
      <td>84.6905</td>
      <td>False</td>
    </tr>
    <tr>
      <td>13</td>
      <td>0.01</td>
      <td>0.05</td>
      <td>26.0108</td>
      <td>0.9</td>
      <td>-34.745</td>
      <td>86.7667</td>
      <td>False</td>
    </tr>
    <tr>
      <td>14</td>
      <td>0.01</td>
      <td>0.06</td>
      <td>0.0</td>
      <td>0.9</td>
      <td>-85.6905</td>
      <td>85.6905</td>
      <td>False</td>
    </tr>
    <tr>
      <td>15</td>
      <td>0.01</td>
      <td>0.1</td>
      <td>23.237</td>
      <td>0.9</td>
      <td>-37.5302</td>
      <td>84.0042</td>
      <td>False</td>
    </tr>
    <tr>
      <td>16</td>
      <td>0.01</td>
      <td>0.15</td>
      <td>26.3822</td>
      <td>0.9</td>
      <td>-34.4028</td>
      <td>87.1671</td>
      <td>False</td>
    </tr>
    <tr>
      <td>17</td>
      <td>0.01</td>
      <td>0.2</td>
      <td>25.0248</td>
      <td>0.9</td>
      <td>-35.7554</td>
      <td>85.805</td>
      <td>False</td>
    </tr>
    <tr>
      <td>18</td>
      <td>0.01</td>
      <td>0.25</td>
      <td>26.2403</td>
      <td>0.9</td>
      <td>-34.5485</td>
      <td>87.029</td>
      <td>False</td>
    </tr>
    <tr>
      <td>19</td>
      <td>0.02</td>
      <td>0.03</td>
      <td>-0.3333</td>
      <td>0.9</td>
      <td>-55.6463</td>
      <td>54.9796</td>
      <td>False</td>
    </tr>
    <tr>
      <td>20</td>
      <td>0.02</td>
      <td>0.04</td>
      <td>-1.0</td>
      <td>0.9</td>
      <td>-75.2101</td>
      <td>73.2101</td>
      <td>False</td>
    </tr>
    <tr>
      <td>21</td>
      <td>0.02</td>
      <td>0.05</td>
      <td>26.0108</td>
      <td>0.6622</td>
      <td>-17.0654</td>
      <td>69.087</td>
      <td>False</td>
    </tr>
    <tr>
      <td>22</td>
      <td>0.02</td>
      <td>0.06</td>
      <td>0.0</td>
      <td>0.9</td>
      <td>-74.2101</td>
      <td>74.2101</td>
      <td>False</td>
    </tr>
    <tr>
      <td>23</td>
      <td>0.02</td>
      <td>0.1</td>
      <td>23.237</td>
      <td>0.7914</td>
      <td>-19.8552</td>
      <td>66.3292</td>
      <td>False</td>
    </tr>
    <tr>
      <td>24</td>
      <td>0.02</td>
      <td>0.15</td>
      <td>26.3822</td>
      <td>0.6461</td>
      <td>-16.7351</td>
      <td>69.4994</td>
      <td>False</td>
    </tr>
    <tr>
      <td>25</td>
      <td>0.02</td>
      <td>0.2</td>
      <td>25.0248</td>
      <td>0.7089</td>
      <td>-18.0857</td>
      <td>68.1354</td>
      <td>False</td>
    </tr>
    <tr>
      <td>26</td>
      <td>0.02</td>
      <td>0.25</td>
      <td>26.2403</td>
      <td>0.6528</td>
      <td>-16.8823</td>
      <td>69.3628</td>
      <td>False</td>
    </tr>
    <tr>
      <td>27</td>
      <td>0.03</td>
      <td>0.04</td>
      <td>-0.6667</td>
      <td>0.9</td>
      <td>-70.6326</td>
      <td>69.2993</td>
      <td>False</td>
    </tr>
    <tr>
      <td>28</td>
      <td>0.03</td>
      <td>0.05</td>
      <td>26.3441</td>
      <td>0.3639</td>
      <td>-8.9214</td>
      <td>61.6096</td>
      <td>False</td>
    </tr>
    <tr>
      <td>29</td>
      <td>0.03</td>
      <td>0.06</td>
      <td>0.3333</td>
      <td>0.9</td>
      <td>-69.6326</td>
      <td>70.2993</td>
      <td>False</td>
    </tr>
    <tr>
      <td>30</td>
      <td>0.03</td>
      <td>0.1</td>
      <td>23.5703</td>
      <td>0.5338</td>
      <td>-11.7147</td>
      <td>58.8553</td>
      <td>False</td>
    </tr>
    <tr>
      <td>31</td>
      <td>0.03</td>
      <td>0.15</td>
      <td>26.7155</td>
      <td>0.3436</td>
      <td>-8.6001</td>
      <td>62.0311</td>
      <td>False</td>
    </tr>
    <tr>
      <td>32</td>
      <td>0.03</td>
      <td>0.2</td>
      <td>25.3582</td>
      <td>0.428</td>
      <td>-9.9492</td>
      <td>60.6656</td>
      <td>False</td>
    </tr>
    <tr>
      <td>33</td>
      <td>0.03</td>
      <td>0.25</td>
      <td>26.5736</td>
      <td>0.3525</td>
      <td>-8.7485</td>
      <td>61.8957</td>
      <td>False</td>
    </tr>
    <tr>
      <td>34</td>
      <td>0.04</td>
      <td>0.05</td>
      <td>27.0108</td>
      <td>0.9</td>
      <td>-33.745</td>
      <td>87.7667</td>
      <td>False</td>
    </tr>
    <tr>
      <td>35</td>
      <td>0.04</td>
      <td>0.06</td>
      <td>1.0</td>
      <td>0.9</td>
      <td>-84.6905</td>
      <td>86.6905</td>
      <td>False</td>
    </tr>
    <tr>
      <td>36</td>
      <td>0.04</td>
      <td>0.1</td>
      <td>24.237</td>
      <td>0.9</td>
      <td>-36.5302</td>
      <td>85.0042</td>
      <td>False</td>
    </tr>
    <tr>
      <td>37</td>
      <td>0.04</td>
      <td>0.15</td>
      <td>27.3822</td>
      <td>0.9</td>
      <td>-33.4028</td>
      <td>88.1671</td>
      <td>False</td>
    </tr>
    <tr>
      <td>38</td>
      <td>0.04</td>
      <td>0.2</td>
      <td>26.0248</td>
      <td>0.9</td>
      <td>-34.7554</td>
      <td>86.805</td>
      <td>False</td>
    </tr>
    <tr>
      <td>39</td>
      <td>0.04</td>
      <td>0.25</td>
      <td>27.2403</td>
      <td>0.9</td>
      <td>-33.5485</td>
      <td>88.029</td>
      <td>False</td>
    </tr>
    <tr>
      <td>40</td>
      <td>0.05</td>
      <td>0.06</td>
      <td>-26.0108</td>
      <td>0.9</td>
      <td>-86.7667</td>
      <td>34.745</td>
      <td>False</td>
    </tr>
    <tr>
      <td>41</td>
      <td>0.05</td>
      <td>0.1</td>
      <td>-2.7738</td>
      <td>0.9</td>
      <td>-9.1822</td>
      <td>3.6346</td>
      <td>False</td>
    </tr>
    <tr>
      <td>42</td>
      <td>0.05</td>
      <td>0.15</td>
      <td>0.3714</td>
      <td>0.9</td>
      <td>-6.2036</td>
      <td>6.9463</td>
      <td>False</td>
    </tr>
    <tr>
      <td>43</td>
      <td>0.05</td>
      <td>0.2</td>
      <td>-0.986</td>
      <td>0.9</td>
      <td>-7.5166</td>
      <td>5.5447</td>
      <td>False</td>
    </tr>
    <tr>
      <td>44</td>
      <td>0.05</td>
      <td>0.25</td>
      <td>0.2294</td>
      <td>0.9</td>
      <td>-6.3801</td>
      <td>6.839</td>
      <td>False</td>
    </tr>
    <tr>
      <td>45</td>
      <td>0.06</td>
      <td>0.1</td>
      <td>23.237</td>
      <td>0.9</td>
      <td>-37.5302</td>
      <td>84.0042</td>
      <td>False</td>
    </tr>
    <tr>
      <td>46</td>
      <td>0.06</td>
      <td>0.15</td>
      <td>26.3822</td>
      <td>0.9</td>
      <td>-34.4028</td>
      <td>87.1671</td>
      <td>False</td>
    </tr>
    <tr>
      <td>47</td>
      <td>0.06</td>
      <td>0.2</td>
      <td>25.0248</td>
      <td>0.9</td>
      <td>-35.7554</td>
      <td>85.805</td>
      <td>False</td>
    </tr>
    <tr>
      <td>48</td>
      <td>0.06</td>
      <td>0.25</td>
      <td>26.2403</td>
      <td>0.9</td>
      <td>-34.5485</td>
      <td>87.029</td>
      <td>False</td>
    </tr>
    <tr>
      <td>49</td>
      <td>0.1</td>
      <td>0.15</td>
      <td>3.1452</td>
      <td>0.9</td>
      <td>-3.5337</td>
      <td>9.824</td>
      <td>False</td>
    </tr>
    <tr>
      <td>50</td>
      <td>0.1</td>
      <td>0.2</td>
      <td>1.7879</td>
      <td>0.9</td>
      <td>-4.8474</td>
      <td>8.4231</td>
      <td>False</td>
    </tr>
    <tr>
      <td>51</td>
      <td>0.1</td>
      <td>0.25</td>
      <td>3.0033</td>
      <td>0.9</td>
      <td>-3.7096</td>
      <td>9.7161</td>
      <td>False</td>
    </tr>
    <tr>
      <td>52</td>
      <td>0.15</td>
      <td>0.2</td>
      <td>-1.3573</td>
      <td>0.9</td>
      <td>-8.1536</td>
      <td>5.4389</td>
      <td>False</td>
    </tr>
    <tr>
      <td>53</td>
      <td>0.15</td>
      <td>0.25</td>
      <td>-0.1419</td>
      <td>0.9</td>
      <td>-7.014</td>
      <td>6.7302</td>
      <td>False</td>
    </tr>
    <tr>
      <td>54</td>
      <td>0.2</td>
      <td>0.25</td>
      <td>1.2154</td>
      <td>0.9</td>
      <td>-5.6143</td>
      <td>8.0451</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Plot a universal confidence interval of each group mean comparing significant differences in group means. 
# Significant differences at the alpha=0.05 level can be identified by intervals that do not overlap 
</span>
<span class="n">oq_data</span> <span class="o">=</span> <span class="n">df_orderDetail</span><span class="p">[</span><span class="s">'Quantity'</span><span class="p">].</span><span class="n">values</span>
<span class="n">discount_labels</span> <span class="o">=</span> <span class="n">df_orderDetail</span><span class="p">[</span><span class="s">'Discount'</span><span class="p">].</span><span class="n">values</span>

<span class="kn">from</span> <span class="nn">statsmodels.stats.multicomp</span> <span class="kn">import</span> <span class="n">MultiComparison</span>
<span class="n">oqd</span> <span class="o">=</span> <span class="n">MultiComparison</span><span class="p">(</span><span class="n">oq_data</span><span class="p">,</span> <span class="n">discount_labels</span><span class="p">)</span>
<span class="n">results</span> <span class="o">=</span> <span class="n">oqd</span><span class="p">.</span><span class="n">tukeyhsd</span><span class="p">()</span>
<span class="n">results</span><span class="p">.</span><span class="n">plot_simultaneous</span><span class="p">(</span><span class="n">comparison_name</span><span class="o">=</span><span class="mf">0.05</span><span class="p">,</span> <span class="n">xlabel</span><span class="o">=</span><span class="s">'Order Quantity'</span><span class="p">,</span> <span class="n">ylabel</span><span class="o">=</span><span class="s">'Discount Level'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_38_0.png" alt="png" /></p>

<h3 id="effect-size">Effect Size</h3>
<p>Calculate effect size using Cohen‚Äôs D as well as any post-hoc tests.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#### Cohen's d
</span><span class="k">def</span> <span class="nf">Cohen_d</span><span class="p">(</span><span class="n">group1</span><span class="p">,</span> <span class="n">group2</span><span class="p">):</span>
    <span class="c1"># Compute Cohen's d.
</span>    <span class="c1"># group1: Series or NumPy array
</span>    <span class="c1"># group2: Series or NumPy array
</span>    <span class="c1"># returns a floating point number 
</span>    <span class="n">diff</span> <span class="o">=</span> <span class="n">group1</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span> <span class="o">-</span> <span class="n">group2</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span>

    <span class="n">n1</span><span class="p">,</span> <span class="n">n2</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">group1</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">group2</span><span class="p">)</span>
    <span class="n">var1</span> <span class="o">=</span> <span class="n">group1</span><span class="p">.</span><span class="n">var</span><span class="p">()</span>
    <span class="n">var2</span> <span class="o">=</span> <span class="n">group2</span><span class="p">.</span><span class="n">var</span><span class="p">()</span>

    <span class="c1"># Calculate the pooled threshold as shown earlier
</span>    <span class="n">pooled_var</span> <span class="o">=</span> <span class="p">(</span><span class="n">n1</span> <span class="o">*</span> <span class="n">var1</span> <span class="o">+</span> <span class="n">n2</span> <span class="o">*</span> <span class="n">var2</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">n1</span> <span class="o">+</span> <span class="n">n2</span><span class="p">)</span>
    
    <span class="c1"># Calculate Cohen's d statistic
</span>    <span class="n">d</span> <span class="o">=</span> <span class="n">diff</span> <span class="o">/</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">pooled_var</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">d</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Cohen_d</span><span class="p">(</span><span class="n">discount</span><span class="p">,</span> <span class="n">fullprice</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.2862724481729282
</code></pre></div></div>

<h3 id="post-hoc-tests">Post-hoc Tests</h3>

<p>The mean quantity per order is similar for each of the discount levels that we identified as significant. The obvious conclusion to draw from this is that offering a discount higher than 5% does not increase the order quantities; higher discounts only produce higher loss in revenue.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Extract revenue lost per discounted order where discount had no effect on order quantity
</span><span class="n">cur</span><span class="p">.</span><span class="n">execute</span><span class="p">(</span><span class="s">"""SELECT Discount, 
                SUM(UnitPrice * Quantity) as 'revLoss',
                COUNT(OrderId) as 'NumOrders'
                FROM orderDetail  
                GROUP BY Discount
                HAVING Discount != 0 AND Discount != 0.05
                ORDER BY revLoss DESC;"""</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">cur</span><span class="p">.</span><span class="n">fetchall</span><span class="p">())</span>
<span class="n">df</span><span class="p">.</span> <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">cur</span><span class="p">.</span><span class="n">description</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>9
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Discount</th>
      <th>revLoss</th>
      <th>NumOrders</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>0.25</td>
      <td>131918.09</td>
      <td>154</td>
    </tr>
    <tr>
      <td>1</td>
      <td>0.20</td>
      <td>111476.38</td>
      <td>161</td>
    </tr>
    <tr>
      <td>2</td>
      <td>0.15</td>
      <td>102948.44</td>
      <td>157</td>
    </tr>
    <tr>
      <td>3</td>
      <td>0.10</td>
      <td>101665.71</td>
      <td>173</td>
    </tr>
    <tr>
      <td>4</td>
      <td>0.03</td>
      <td>124.65</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"Total Revenue Forfeited $"</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">revLoss</span><span class="p">.</span><span class="nb">sum</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Number of Orders Affected "</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">NumOrders</span><span class="p">.</span><span class="nb">sum</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Avg Forfeited Per Order $"</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">revLoss</span><span class="p">.</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="n">df</span><span class="p">.</span><span class="n">NumOrders</span><span class="p">.</span><span class="nb">sum</span><span class="p">())</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Total Revenue Forfeited $ 448373.27
Number of Orders Affected  653
Avg Forfeited Per Order $ 686.6359418070444
</code></pre></div></div>

<h2 id="analyze-results">Analyze Results</h2>

<p>Where alpha = 0.05, the null hypothesis is rejected. Discount amount has a statistically significant effect on the quantity in an order where the discount level is equal to 5%, 15%, 20% or 25%.</p>

<h1 id="h2-countrydiscount">H2: Country‚ÄìDiscount</h1>

<p><strong>Do individual countries show a statistically significant preference for discount?</strong></p>

<p><strong>If so, which countries and to what extent?</strong></p>

<h2 id="hypotheses-1">Hypotheses</h2>

<ul>
  <li>$H_0$: Countries purchase equal quantities of discounted vs non-discounted products.</li>
  <li>$H_A$: Countries purchase different quantities of discounted vs non-discounted products.</li>
</ul>

<h2 id="eda-1">EDA</h2>
<p>Select the proper dataset for analysis, perform EDA, and generate data groups for testing.</p>

<h3 id="select">Select</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_order</span> <span class="o">=</span> <span class="n">get_table</span><span class="p">(</span><span class="n">cur</span><span class="p">,</span> <span class="s">"'Order'"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_order</span><span class="p">.</span><span class="n">head</span><span class="p">())</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_orderDetail</span><span class="p">.</span><span class="n">head</span><span class="p">())</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>OrderId</th>
      <th>CustomerId</th>
      <th>EmployeeId</th>
      <th>OrderDate</th>
      <th>RequiredDate</th>
      <th>ShippedDate</th>
      <th>ShipVia</th>
      <th>Freight</th>
      <th>ShipName</th>
      <th>ShipAddress</th>
      <th>ShipCity</th>
      <th>ShipRegion</th>
      <th>ShipPostalCode</th>
      <th>ShipCountry</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>10248</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-07-04</td>
      <td>2012-08-01</td>
      <td>2012-07-16</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
    </tr>
    <tr>
      <td>1</td>
      <td>10249</td>
      <td>TOMSP</td>
      <td>6</td>
      <td>2012-07-05</td>
      <td>2012-08-16</td>
      <td>2012-07-10</td>
      <td>1</td>
      <td>11.61</td>
      <td>Toms Spezialit√§ten</td>
      <td>Luisenstr. 48</td>
      <td>M√ºnster</td>
      <td>Western Europe</td>
      <td>44087</td>
      <td>Germany</td>
    </tr>
    <tr>
      <td>2</td>
      <td>10250</td>
      <td>HANAR</td>
      <td>4</td>
      <td>2012-07-08</td>
      <td>2012-08-05</td>
      <td>2012-07-12</td>
      <td>2</td>
      <td>65.83</td>
      <td>Hanari Carnes</td>
      <td>Rua do Pa√ßo, 67</td>
      <td>Rio de Janeiro</td>
      <td>South America</td>
      <td>05454-876</td>
      <td>Brazil</td>
    </tr>
    <tr>
      <td>3</td>
      <td>10251</td>
      <td>VICTE</td>
      <td>3</td>
      <td>2012-07-08</td>
      <td>2012-08-05</td>
      <td>2012-07-15</td>
      <td>1</td>
      <td>41.34</td>
      <td>Victuailles en stock</td>
      <td>2, rue du Commerce</td>
      <td>Lyon</td>
      <td>Western Europe</td>
      <td>69004</td>
      <td>France</td>
    </tr>
    <tr>
      <td>4</td>
      <td>10252</td>
      <td>SUPRD</td>
      <td>4</td>
      <td>2012-07-09</td>
      <td>2012-08-06</td>
      <td>2012-07-11</td>
      <td>2</td>
      <td>51.30</td>
      <td>Supr√™mes d√©lices</td>
      <td>Boulevard Tirou, 255</td>
      <td>Charleroi</td>
      <td>Western Europe</td>
      <td>B-6000</td>
      <td>Belgium</td>
    </tr>
  </tbody>
</table>
</div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Id</th>
      <th>OrderId</th>
      <th>ProductId</th>
      <th>UnitPrice</th>
      <th>Quantity</th>
      <th>Discount</th>
      <th>discounted</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>10248/11</td>
      <td>10248</td>
      <td>11</td>
      <td>14.0</td>
      <td>12</td>
      <td>0.0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>1</td>
      <td>10248/42</td>
      <td>10248</td>
      <td>42</td>
      <td>9.8</td>
      <td>10</td>
      <td>0.0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>2</td>
      <td>10248/72</td>
      <td>10248</td>
      <td>72</td>
      <td>34.8</td>
      <td>5</td>
      <td>0.0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>3</td>
      <td>10249/14</td>
      <td>10249</td>
      <td>14</td>
      <td>18.6</td>
      <td>9</td>
      <td>0.0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>4</td>
      <td>10249/51</td>
      <td>10249</td>
      <td>51</td>
      <td>42.4</td>
      <td>40</td>
      <td>0.0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Rename 'Id' to 'OrderId' for joining tables with matching primary key name
</span><span class="n">df_order</span><span class="p">.</span><span class="n">rename</span><span class="p">({</span><span class="s">'Id'</span><span class="p">:</span><span class="s">'OrderId'</span><span class="p">},</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_order</span><span class="p">.</span><span class="n">head</span><span class="p">())</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>OrderId</th>
      <th>CustomerId</th>
      <th>EmployeeId</th>
      <th>OrderDate</th>
      <th>RequiredDate</th>
      <th>ShippedDate</th>
      <th>ShipVia</th>
      <th>Freight</th>
      <th>ShipName</th>
      <th>ShipAddress</th>
      <th>ShipCity</th>
      <th>ShipRegion</th>
      <th>ShipPostalCode</th>
      <th>ShipCountry</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>10248</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-07-04</td>
      <td>2012-08-01</td>
      <td>2012-07-16</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
    </tr>
    <tr>
      <td>1</td>
      <td>10249</td>
      <td>TOMSP</td>
      <td>6</td>
      <td>2012-07-05</td>
      <td>2012-08-16</td>
      <td>2012-07-10</td>
      <td>1</td>
      <td>11.61</td>
      <td>Toms Spezialit√§ten</td>
      <td>Luisenstr. 48</td>
      <td>M√ºnster</td>
      <td>Western Europe</td>
      <td>44087</td>
      <td>Germany</td>
    </tr>
    <tr>
      <td>2</td>
      <td>10250</td>
      <td>HANAR</td>
      <td>4</td>
      <td>2012-07-08</td>
      <td>2012-08-05</td>
      <td>2012-07-12</td>
      <td>2</td>
      <td>65.83</td>
      <td>Hanari Carnes</td>
      <td>Rua do Pa√ßo, 67</td>
      <td>Rio de Janeiro</td>
      <td>South America</td>
      <td>05454-876</td>
      <td>Brazil</td>
    </tr>
    <tr>
      <td>3</td>
      <td>10251</td>
      <td>VICTE</td>
      <td>3</td>
      <td>2012-07-08</td>
      <td>2012-08-05</td>
      <td>2012-07-15</td>
      <td>1</td>
      <td>41.34</td>
      <td>Victuailles en stock</td>
      <td>2, rue du Commerce</td>
      <td>Lyon</td>
      <td>Western Europe</td>
      <td>69004</td>
      <td>France</td>
    </tr>
    <tr>
      <td>4</td>
      <td>10252</td>
      <td>SUPRD</td>
      <td>4</td>
      <td>2012-07-09</td>
      <td>2012-08-06</td>
      <td>2012-07-11</td>
      <td>2</td>
      <td>51.30</td>
      <td>Supr√™mes d√©lices</td>
      <td>Boulevard Tirou, 255</td>
      <td>Charleroi</td>
      <td>Western Europe</td>
      <td>B-6000</td>
      <td>Belgium</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_order</span><span class="p">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'OrderId'</span><span class="p">,</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df_order</span><span class="p">.</span><span class="n">head</span><span class="p">())</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CustomerId</th>
      <th>EmployeeId</th>
      <th>OrderDate</th>
      <th>RequiredDate</th>
      <th>ShippedDate</th>
      <th>ShipVia</th>
      <th>Freight</th>
      <th>ShipName</th>
      <th>ShipAddress</th>
      <th>ShipCity</th>
      <th>ShipRegion</th>
      <th>ShipPostalCode</th>
      <th>ShipCountry</th>
    </tr>
    <tr>
      <th>OrderId</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>10248</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-07-04</td>
      <td>2012-08-01</td>
      <td>2012-07-16</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
    </tr>
    <tr>
      <td>10249</td>
      <td>TOMSP</td>
      <td>6</td>
      <td>2012-07-05</td>
      <td>2012-08-16</td>
      <td>2012-07-10</td>
      <td>1</td>
      <td>11.61</td>
      <td>Toms Spezialit√§ten</td>
      <td>Luisenstr. 48</td>
      <td>M√ºnster</td>
      <td>Western Europe</td>
      <td>44087</td>
      <td>Germany</td>
    </tr>
    <tr>
      <td>10250</td>
      <td>HANAR</td>
      <td>4</td>
      <td>2012-07-08</td>
      <td>2012-08-05</td>
      <td>2012-07-12</td>
      <td>2</td>
      <td>65.83</td>
      <td>Hanari Carnes</td>
      <td>Rua do Pa√ßo, 67</td>
      <td>Rio de Janeiro</td>
      <td>South America</td>
      <td>05454-876</td>
      <td>Brazil</td>
    </tr>
    <tr>
      <td>10251</td>
      <td>VICTE</td>
      <td>3</td>
      <td>2012-07-08</td>
      <td>2012-08-05</td>
      <td>2012-07-15</td>
      <td>1</td>
      <td>41.34</td>
      <td>Victuailles en stock</td>
      <td>2, rue du Commerce</td>
      <td>Lyon</td>
      <td>Western Europe</td>
      <td>69004</td>
      <td>France</td>
    </tr>
    <tr>
      <td>10252</td>
      <td>SUPRD</td>
      <td>4</td>
      <td>2012-07-09</td>
      <td>2012-08-06</td>
      <td>2012-07-11</td>
      <td>2</td>
      <td>51.30</td>
      <td>Supr√™mes d√©lices</td>
      <td>Boulevard Tirou, 255</td>
      <td>Charleroi</td>
      <td>Western Europe</td>
      <td>B-6000</td>
      <td>Belgium</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_country</span> <span class="o">=</span> <span class="n">df_orderDetail</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df_order</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'OrderId'</span><span class="p">,</span> <span class="n">copy</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="explore-1">Explore</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fs</span><span class="p">.</span><span class="n">ft</span><span class="p">.</span><span class="n">alphasentaurii</span><span class="p">.</span><span class="n">hot_stats</span><span class="p">(</span><span class="n">df_country</span><span class="p">,</span> <span class="s">'ShipCountry'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>--------&gt;
HOT!STATS
&lt;--------

SHIPCOUNTRY
Data Type: object

min    Argentina
max    Venezuela
Name: ShipCountry, dtype: object 

√†-la-Mode: 
0    USA
dtype: object


No Nulls Found!

Non-Null Value Counts:
USA            352
Germany        328
Brazil         203
France         184
UK             135
Austria        125
Venezuela      118
Sweden          97
Canada          75
Mexico          72
Belgium         56
Ireland         55
Spain           54
Finland         54
Italy           53
Switzerland     52
Denmark         46
Argentina       34
Portugal        30
Poland          16
Norway          16
Name: ShipCountry, dtype: int64

# Unique Values: 21
</code></pre></div></div>

<h3 id="group-1">Group</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">countries</span> <span class="o">=</span> <span class="n">df_country</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'ShipCountry'</span><span class="p">).</span><span class="n">groups</span>
<span class="n">countries</span><span class="p">.</span><span class="n">keys</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dict_keys(['Argentina', 'Austria', 'Belgium', 'Brazil', 'Canada', 'Denmark', 'Finland', 'France', 'Germany', 'Ireland', 'Italy', 'Mexico', 'Norway', 'Poland', 'Portugal', 'Spain', 'Sweden', 'Switzerland', 'UK', 'USA', 'Venezuela'])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_countries</span> <span class="o">=</span> <span class="n">df_country</span><span class="p">[[</span><span class="s">'ShipCountry'</span><span class="p">,</span><span class="s">'Quantity'</span><span class="p">,</span><span class="s">'discounted'</span><span class="p">]].</span><span class="n">copy</span><span class="p">()</span>
<span class="n">df_countries</span><span class="p">.</span><span class="n">ShipCountry</span><span class="p">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>USA            352
Germany        328
Brazil         203
France         184
UK             135
Austria        125
Venezuela      118
Sweden          97
Canada          75
Mexico          72
Belgium         56
Ireland         55
Spain           54
Finland         54
Italy           53
Switzerland     52
Denmark         46
Argentina       34
Portugal        30
Poland          16
Norway          16
Name: ShipCountry, dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">researchpy</span> <span class="k">as</span> <span class="n">rp</span>
<span class="n">rp</span><span class="p">.</span><span class="n">summary_cont</span><span class="p">(</span><span class="n">df_countries</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'discounted'</span><span class="p">]))</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr>
      <th></th>
      <th colspan="6" halign="left">Quantity</th>
    </tr>
    <tr>
      <th></th>
      <th>N</th>
      <th>Mean</th>
      <th>SD</th>
      <th>SE</th>
      <th>95% Conf.</th>
      <th>Interval</th>
    </tr>
    <tr>
      <th>discounted</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>1317</td>
      <td>21.715262</td>
      <td>17.507493</td>
      <td>0.482426</td>
      <td>20.769706</td>
      <td>22.660818</td>
    </tr>
    <tr>
      <td>1</td>
      <td>838</td>
      <td>27.109785</td>
      <td>20.771439</td>
      <td>0.717537</td>
      <td>25.703412</td>
      <td>28.516159</td>
    </tr>
  </tbody>
</table>
</div>

<h2 id="test">Test</h2>

<h3 id="sample-size-1">Sample Size</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Check if sample sizes allow us to ignore assumptions;
# visualize sample size comparisons for two groups (normality check)
</span>
<span class="n">stat_dict</span> <span class="o">=</span> <span class="p">{}</span>

<span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">countries</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">grp0</span> <span class="o">=</span> <span class="n">df_countries</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">v</span><span class="p">].</span><span class="n">groupby</span><span class="p">(</span><span class="s">'discounted'</span><span class="p">).</span><span class="n">get_group</span><span class="p">(</span><span class="mi">0</span><span class="p">)[</span><span class="s">'Quantity'</span><span class="p">]</span>
        <span class="n">grp1</span> <span class="o">=</span> <span class="n">df_countries</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">v</span><span class="p">].</span><span class="n">groupby</span><span class="p">(</span><span class="s">'discounted'</span><span class="p">).</span><span class="n">get_group</span><span class="p">(</span><span class="mi">1</span><span class="p">)[</span><span class="s">'Quantity'</span><span class="p">]</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">k</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
        
        <span class="kn">import</span> <span class="nn">scipy.stats</span> <span class="k">as</span> <span class="n">stat</span>

        <span class="n">plt</span><span class="p">.</span><span class="n">bar</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Full Price'</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="n">grp0</span><span class="p">.</span><span class="n">mean</span><span class="p">(),</span> <span class="n">yerr</span><span class="o">=</span><span class="n">stat</span><span class="p">.</span><span class="n">sem</span><span class="p">(</span><span class="n">grp0</span><span class="p">))</span>
        <span class="n">plt</span><span class="p">.</span><span class="n">bar</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Discounted'</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="n">grp1</span><span class="p">.</span><span class="n">mean</span><span class="p">(),</span> <span class="n">yerr</span><span class="o">=</span><span class="n">stat</span><span class="p">.</span><span class="n">sem</span><span class="p">(</span><span class="n">grp1</span><span class="p">))</span>
        <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
        
    <span class="k">except</span><span class="p">:</span>
        <span class="k">pass</span>
        
    <span class="k">try</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">=</span> <span class="n">stat</span><span class="p">.</span><span class="n">ttest_ind</span><span class="p">(</span><span class="n">grp0</span><span class="p">,</span><span class="n">grp1</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mf">0.05</span><span class="p">:</span>
            <span class="n">stat_dict</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
            <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="si">{</span><span class="n">k</span><span class="si">}</span><span class="s"> PREFERS DISCOUNTS!"</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">continue</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">k</span><span class="si">}</span><span class="s"> does not contain one of the groups."</span><span class="p">)</span>
<span class="n">stat_dict</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Argentina does not contain one of the groups.
Austria
</code></pre></div></div>

<p><img src="output_64_1.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Belgium
</code></pre></div></div>

<p><img src="output_64_3.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Brazil
</code></pre></div></div>

<p><img src="output_64_5.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Canada
</code></pre></div></div>

<p><img src="output_64_7.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Canada PREFERS DISCOUNTS!
Denmark
</code></pre></div></div>

<p><img src="output_64_9.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Finland
</code></pre></div></div>

<p><img src="output_64_11.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>France
</code></pre></div></div>

<p><img src="output_64_13.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Germany
</code></pre></div></div>

<p><img src="output_64_15.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Ireland
</code></pre></div></div>

<p><img src="output_64_17.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Italy
</code></pre></div></div>

<p><img src="output_64_19.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Mexico
</code></pre></div></div>

<p><img src="output_64_21.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Norway PREFERS DISCOUNTS!
Portugal
</code></pre></div></div>

<p><img src="output_64_23.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Spain
</code></pre></div></div>

<p><img src="output_64_25.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Spain PREFERS DISCOUNTS!
Sweden
</code></pre></div></div>

<p><img src="output_64_27.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Switzerland
</code></pre></div></div>

<p><img src="output_64_29.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>UK
</code></pre></div></div>

<p><img src="output_64_31.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>UK PREFERS DISCOUNTS!
USA
</code></pre></div></div>

<p><img src="output_64_33.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>USA PREFERS DISCOUNTS!
Venezuela
</code></pre></div></div>

<p><img src="output_64_35.png" alt="png" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{'Canada': 0.0010297982736886485,
 'Norway': 0.04480094051665529,
 'Spain': 0.0025087181106716217,
 'UK': 0.00031794803200322925,
 'USA': 0.019868707223971476}
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stat_dict</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{'Canada': 0.0010297982736886485,
 'Norway': 0.04480094051665529,
 'Spain': 0.0025087181106716217,
 'UK': 0.00031794803200322925,
 'USA': 0.019868707223971476}
</code></pre></div></div>

<h3 id="normality-test-1">Normality Test</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">"Distribution of Full price vs Discounted Orders"</span><span class="p">)</span>

<span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">grp0</span><span class="p">)</span>
<span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">grp1</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">([</span><span class="s">'Full Price'</span><span class="p">,</span><span class="s">'Discounted'</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;matplotlib.legend.Legend at 0x1a25ab2978&gt;
</code></pre></div></div>

<p><img src="output_67_1.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Test for normality - D'Agostino-Pearson's normality test: scipy.stats.normaltest
</span><span class="n">stat</span><span class="p">.</span><span class="n">normaltest</span><span class="p">(</span><span class="n">grp0</span><span class="p">),</span> <span class="n">stat</span><span class="p">.</span><span class="n">normaltest</span><span class="p">(</span><span class="n">grp1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(NormaltestResult(statistic=9.316225653095811, pvalue=0.009484344125890621),
 NormaltestResult(statistic=10.255309993341813, pvalue=0.005930451108115991))
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Run non-parametric test (since normality test failed)
</span><span class="n">stat</span><span class="p">.</span><span class="n">mannwhitneyu</span><span class="p">(</span><span class="n">grp0</span><span class="p">,</span> <span class="n">grp1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MannwhitneyuResult(statistic=1632.5, pvalue=0.44935140740973323)
</code></pre></div></div>

<p><strong>Canada, Spain, UK and the USA have pvalues &lt; 0.05 indicating there is a relationship between discount and order quantity and the null hypothesis is rejected for these individual countries.</strong></p>

<h3 id="statistical-test-1">Statistical Test</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">statsmodels.api</span> <span class="k">as</span> <span class="n">sm</span>
<span class="kn">from</span> <span class="nn">statsmodels.formula.api</span> <span class="kn">import</span> <span class="n">ols</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">ols</span><span class="p">(</span><span class="s">"Quantity~C(discounted)+C(ShipCountry)+C(discounted):C(ShipCountry)"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_countries</span><span class="p">).</span><span class="n">fit</span><span class="p">()</span>
<span class="n">anova_table</span> <span class="o">=</span> <span class="n">sm</span><span class="p">.</span><span class="n">stats</span><span class="p">.</span><span class="n">anova_lm</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">typ</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/Users/alphasentaurii/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/base/model.py:1752: ValueWarning: covariance of constraints does not have full rank. The number of constraints is 20, but rank is 18
  'rank is %d' % (J, J_), ValueWarning)
/Users/alphasentaurii/opt/anaconda3/envs/learn-env/lib/python3.6/site-packages/statsmodels/base/model.py:1752: ValueWarning: covariance of constraints does not have full rank. The number of constraints is 20, but rank is 18
  'rank is %d' % (J, J_), ValueWarning)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># reformat scientific notation of results for easier interpretation
</span><span class="n">anova_table</span><span class="p">.</span><span class="n">style</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="s">"{:.5f}"</span><span class="p">,</span> <span class="n">subset</span><span class="o">=</span><span class="p">[</span><span class="s">'PR(&gt;F)'</span><span class="p">])</span>
</code></pre></div></div>

<style type="text/css">
</style>
<table id="T_3d92bd06_29bb_11ea_af86_f40f2405a054"><thead>    <tr>        <th class="blank level0"></th>        <th class="col_heading level0 col0">sum_sq</th>        <th class="col_heading level0 col1">df</th>        <th class="col_heading level0 col2">F</th>        <th class="col_heading level0 col3">PR(&gt;F)</th>    </tr></thead><tbody>
                <tr>
                        <th id="T_3d92bd06_29bb_11ea_af86_f40f2405a054level0_row0" class="row_heading level0 row0">C(discounted)</th>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row0_col0" class="data row0 col0">9.78092e-08</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row0_col1" class="data row0 col1">1</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row0_col2" class="data row0 col2">3.07557e-10</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row0_col3" class="data row0 col3">0.99999</td>
            </tr>
            <tr>
                        <th id="T_3d92bd06_29bb_11ea_af86_f40f2405a054level0_row1" class="row_heading level0 row1">C(ShipCountry)</th>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row1_col0" class="data row1 col0">101347</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row1_col1" class="data row1 col1">20</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row1_col2" class="data row1 col2">15.9341</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row1_col3" class="data row1 col3">0.00000</td>
            </tr>
            <tr>
                        <th id="T_3d92bd06_29bb_11ea_af86_f40f2405a054level0_row2" class="row_heading level0 row2">C(discounted):C(ShipCountry)</th>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row2_col0" class="data row2 col0">15584.9</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row2_col1" class="data row2 col1">20</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row2_col2" class="data row2 col2">2.4503</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row2_col3" class="data row2 col3">0.00061</td>
            </tr>
            <tr>
                        <th id="T_3d92bd06_29bb_11ea_af86_f40f2405a054level0_row3" class="row_heading level0 row3">Residual</th>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row3_col0" class="data row3 col0">672930</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row3_col1" class="data row3 col1">2116</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row3_col2" class="data row3 col2">nan</td>
                        <td id="T_3d92bd06_29bb_11ea_af86_f40f2405a054row3_col3" class="data row3 col3">nan</td>
            </tr>
    </tbody></table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># calculate ttest_ind p-values and significance for individual countries
</span><span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s"> Countries with p-values &lt; 0.05 - Null Hypothesis Rejected:"</span><span class="p">)</span>
<span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">countries</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">grp0</span> <span class="o">=</span> <span class="n">df_countries</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">v</span><span class="p">].</span><span class="n">groupby</span><span class="p">(</span><span class="s">'discounted'</span><span class="p">).</span><span class="n">get_group</span><span class="p">(</span><span class="mi">0</span><span class="p">)[</span><span class="s">'Quantity'</span><span class="p">]</span>
        <span class="n">grp1</span> <span class="o">=</span> <span class="n">df_countries</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">v</span><span class="p">].</span><span class="n">groupby</span><span class="p">(</span><span class="s">'discounted'</span><span class="p">).</span><span class="n">get_group</span><span class="p">(</span><span class="mi">1</span><span class="p">)[</span><span class="s">'Quantity'</span><span class="p">]</span>
        <span class="n">result</span> <span class="o">=</span> <span class="n">stat</span><span class="p">.</span><span class="n">ttest_ind</span><span class="p">(</span><span class="n">grp0</span><span class="p">,</span><span class="n">grp1</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mf">0.05</span><span class="p">:</span>
            
            <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n\t</span><span class="si">{</span><span class="n">k</span><span class="si">}</span><span class="s">: </span><span class="si">{</span><span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nb">round</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">continue</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="bp">None</span> 
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Countries with p-values &lt; 0.05 - Null Hypothesis Rejected:

	Canada: 0.001

	Spain: 0.0025

	UK: 0.0003

	USA: 0.0199
</code></pre></div></div>

<p>Although discount does not have a significant effect on countries overall (p = 0.99), there is a statistically significant relationship between order quantities and discount in some of the countries (p=0.0006).</p>

<p>Countries with p-values &lt; 0.05 - Null Hypothesis Rejected:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Canada: 0.001

Spain: 0.0025

UK: 0.0003

USA: 0.0199
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">y1</span> <span class="o">=</span> <span class="n">df_countries</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'discounted'</span><span class="p">).</span><span class="n">get_group</span><span class="p">(</span><span class="mi">1</span><span class="p">)[</span><span class="s">'Quantity'</span><span class="p">]</span>


<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>

<span class="n">ax</span> <span class="o">=</span> <span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'ShipCountry'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="n">y1</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_countries</span><span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Average Discount Order Quantity by Country'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'family'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">16</span><span class="p">})</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Average Discount Order Quantity by Country')
</code></pre></div></div>

<p><img src="output_76_1.png" alt="png" /></p>

<h3 id="effect-size-1">Effect Size</h3>

<p>Effect size testing is unnecessary since the null hypothesis for the main question was not rejected.</p>

<h3 id="post-hoc-tests-1">Post-hoc Tests</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!pip install pandasql
</span><span class="kn">from</span> <span class="nn">pandasql</span> <span class="kn">import</span> <span class="n">sqldf</span>
<span class="n">pysqldf</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">q</span><span class="p">:</span> <span class="n">sqldf</span><span class="p">(</span><span class="n">q</span><span class="p">,</span> <span class="nb">globals</span><span class="p">())</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Compare number of discount vs fullprice orders by country.
# Create bar plots grouped as discount vs fullprice orders by country
#fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(18,8))
</span>
<span class="n">q1</span> <span class="o">=</span> <span class="s">"SELECT ShipCountry, AVG(Quantity) as OrderQty from df_countries where discounted = 0 group by 1;"</span>
<span class="n">q2</span> <span class="o">=</span> <span class="s">"SELECT ShipCountry, AVG(Quantity) as OrderQty from df_countries where discounted = 1 group by 1;"</span>

<span class="n">df_fpCount</span> <span class="o">=</span> <span class="n">pysqldf</span><span class="p">(</span><span class="n">q1</span><span class="p">)</span>
<span class="n">df_dcCount</span> <span class="o">=</span> <span class="n">pysqldf</span><span class="p">(</span><span class="n">q2</span><span class="p">)</span>

<span class="n">df_fpCount</span><span class="p">[</span><span class="s">'Group'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'FullPrice'</span>
<span class="n">df_dcCount</span><span class="p">[</span><span class="s">'Group'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'Discount'</span>

<span class="n">df_country_qty</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df_fpCount</span><span class="p">,</span> <span class="n">df_dcCount</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df_country_qty</span><span class="p">.</span><span class="n">describe</span><span class="p">())</span>

<span class="c1">#ax = sns.barplot(x='ShipCountry', y='NumOrders', data=country_df, hue='Group', palette='pastel', orient='v')
#ax.set_title('Number of Fullprice vs Discount Orders by Country', fontdict={'family': 'monospace', 'size':16})
</span>
<span class="c1">#ax1 = sns.barplot(x='ShipCountry', y='TotalQty', data=country_df, hue='Group', palette='pastel', orient='v')
#ax1.set_title('Total Qty of Fullprice vs Discount Orders by Country', fontdict={'family': 'monospace', 'size':16})
</span>
<span class="n">sns</span><span class="p">.</span><span class="n">set_style</span><span class="p">(</span><span class="s">"whitegrid"</span><span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">"Average Order Quantity by Country: Fullprice vs Discount"</span><span class="p">)</span>

<span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'ShipCountry'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'OrderQty'</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_country_qty</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'Group'</span><span class="p">,</span> 
            <span class="n">palette</span><span class="o">=</span><span class="s">'pastel'</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">'v'</span><span class="p">,</span> <span class="n">ci</span><span class="o">=</span><span class="mi">68</span><span class="p">,</span> <span class="n">capsize</span><span class="o">=</span><span class="p">.</span><span class="mi">2</span><span class="p">)</span>

<span class="c1">## Set Title,X/Y Labels,fonts,formatting
</span><span class="n">ax_font</span> <span class="o">=</span> <span class="p">{</span><span class="s">'family'</span><span class="p">:</span><span class="s">'monospace'</span><span class="p">,</span><span class="s">'weight'</span><span class="p">:</span><span class="s">'semibold'</span><span class="p">,</span><span class="s">'size'</span><span class="p">:</span><span class="mi">14</span><span class="p">}</span>
<span class="n">tick_font</span> <span class="o">=</span> <span class="p">{</span><span class="s">'size'</span><span class="p">:</span><span class="mi">12</span><span class="p">,</span><span class="s">'ha'</span><span class="p">:</span><span class="s">'center'</span><span class="p">,</span><span class="s">'rotation'</span><span class="p">:</span><span class="mi">45</span><span class="p">}</span>
<span class="n">t_label</span> <span class="o">=</span> <span class="s">"Average Order Quantity by Country: Fullprice vs Discount Orders"</span>
<span class="n">t_font</span> <span class="o">=</span> <span class="p">{</span><span class="s">'family'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">18</span><span class="p">}</span>

<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Order Qty"</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">ax_font</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Country"</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">ax_font</span><span class="p">)</span>
<span class="c1">#ax.set_title('Average Order Quantity by Country: Fullprice vs Discount', fontdict={'family': 'PT Mono', 'size':16})
</span><span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="n">t_label</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">t_font</span><span class="p">)</span>

</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>OrderQty</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>count</td>
      <td>39.000000</td>
    </tr>
    <tr>
      <td>mean</td>
      <td>22.596281</td>
    </tr>
    <tr>
      <td>std</td>
      <td>7.620086</td>
    </tr>
    <tr>
      <td>min</td>
      <td>9.970588</td>
    </tr>
    <tr>
      <td>25%</td>
      <td>17.458458</td>
    </tr>
    <tr>
      <td>50%</td>
      <td>21.750000</td>
    </tr>
    <tr>
      <td>75%</td>
      <td>25.985539</td>
    </tr>
    <tr>
      <td>max</td>
      <td>43.172414</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Average Order Quantity by Country: Fullprice vs Discount Orders')
</code></pre></div></div>

<p><img src="output_81_2.png" alt="png" /></p>

<p>According to the plot above, the actual number of discounted orders is lower than the number of full price orders. Let‚Äôs compare the sum of quantities for these orders in each group.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Compare number of discount vs fullprice orders by country.
# Create bar plots grouped as discount vs fullprice orders by country
#fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(18,8))
</span>
<span class="n">q1</span> <span class="o">=</span> <span class="s">"SELECT ShipCountry, Count(*) as OrderCount from df_countries where discounted = 0 group by 1;"</span>
<span class="n">q2</span> <span class="o">=</span> <span class="s">"SELECT ShipCountry, Count(*) as OrderCount from df_countries where discounted = 1 group by 1;"</span>

<span class="n">df_fpCount</span> <span class="o">=</span> <span class="n">pysqldf</span><span class="p">(</span><span class="n">q1</span><span class="p">)</span>
<span class="n">df_dcCount</span> <span class="o">=</span> <span class="n">pysqldf</span><span class="p">(</span><span class="n">q2</span><span class="p">)</span>

<span class="n">df_fpCount</span><span class="p">[</span><span class="s">'Group'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'FullPrice'</span>
<span class="n">df_dcCount</span><span class="p">[</span><span class="s">'Group'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'Discount'</span>

<span class="n">df_country_count</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df_fpCount</span><span class="p">,</span> <span class="n">df_dcCount</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">df_country_count</span><span class="p">.</span><span class="n">describe</span><span class="p">())</span>

<span class="c1">#ax = sns.barplot(x='ShipCountry', y='NumOrders', data=country_df, hue='Group', palette='pastel', orient='v')
#ax.set_title('Number of Fullprice vs Discount Orders by Country', fontdict={'family': 'monospace', 'size':16})
</span>
<span class="c1">#ax1 = sns.barplot(x='ShipCountry', y='TotalQty', data=country_df, hue='Group', palette='pastel', orient='v')
#ax1.set_title('Total Qty of Fullprice vs Discount Orders by Country', fontdict={'family': 'monospace', 'size':16})
</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">"Mean QPO by Country"</span><span class="p">)</span>

<span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'ShipCountry'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'OrderCount'</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_country_count</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'Group'</span><span class="p">,</span> <span class="n">palette</span><span class="o">=</span><span class="s">'Reds_d'</span><span class="p">,</span> 
            <span class="n">orient</span><span class="o">=</span><span class="s">'v'</span><span class="p">,</span> <span class="n">ci</span><span class="o">=</span><span class="mi">68</span><span class="p">,</span> <span class="n">capsize</span><span class="o">=</span><span class="p">.</span><span class="mi">2</span><span class="p">)</span>

<span class="c1">## Set Title,X/Y Labels,fonts,formatting
</span><span class="n">ax_font</span> <span class="o">=</span> <span class="p">{</span><span class="s">'family'</span><span class="p">:</span><span class="s">'monospace'</span><span class="p">,</span><span class="s">'weight'</span><span class="p">:</span><span class="s">'semibold'</span><span class="p">,</span><span class="s">'size'</span><span class="p">:</span><span class="mi">14</span><span class="p">}</span>
<span class="n">tick_font</span> <span class="o">=</span> <span class="p">{</span><span class="s">'size'</span><span class="p">:</span><span class="mi">12</span><span class="p">,</span><span class="s">'ha'</span><span class="p">:</span><span class="s">'center'</span><span class="p">,</span><span class="s">'rotation'</span><span class="p">:</span><span class="mi">45</span><span class="p">}</span>
<span class="n">t_label</span> <span class="o">=</span> <span class="s">"Count of Fullprice vs Discount Orders by Country"</span>
<span class="n">t_font</span> <span class="o">=</span> <span class="p">{</span><span class="s">'family'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">18</span><span class="p">}</span>

<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Number of Orders"</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">ax_font</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Country"</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">ax_font</span><span class="p">)</span>
<span class="c1">#ax.set_title('Average Order Quantity by Country: Fullprice vs Discount', fontdict={'family': 'PT Mono', 'size':16})
</span><span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="n">t_label</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">t_font</span><span class="p">)</span>

</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>OrderCount</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>count</td>
      <td>39.000000</td>
    </tr>
    <tr>
      <td>mean</td>
      <td>55.256410</td>
    </tr>
    <tr>
      <td>std</td>
      <td>48.722478</td>
    </tr>
    <tr>
      <td>min</td>
      <td>8.000000</td>
    </tr>
    <tr>
      <td>25%</td>
      <td>22.000000</td>
    </tr>
    <tr>
      <td>50%</td>
      <td>39.000000</td>
    </tr>
    <tr>
      <td>75%</td>
      <td>69.500000</td>
    </tr>
    <tr>
      <td>max</td>
      <td>210.000000</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Count of Fullprice vs Discount Orders by Country')
</code></pre></div></div>

<p><img src="output_83_2.png" alt="png" /></p>

<p>This still doesn‚Äôt tell us much about whether or not these countries prefer discounts (tend to order more products) or not - in order to get better insight, we need to look at the average order size (mean quantities per order) for each group.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Compare number of discount vs fullprice orders by country.
# Create bar plots grouped as discount vs fullprice orders by country
#fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(18,8))
</span>
<span class="c1">#q1 = "SELECT ShipCountry, Count(*) as NumOrders, SUM(Quantity) as TotalQty, AVG(Quantity) as MeanQPO from df_countries where discounted = 0 group by 1;"
#q2 = "SELECT ShipCountry, Count(*) as NumOrders, SUM(Quantity) as TotalQty, AVG(Quantity) as MeanQPO from df_countries where discounted = 1 group by 1;"
</span>
<span class="n">q1</span> <span class="o">=</span> <span class="s">"SELECT ShipCountry, AVG(Quantity) as MeanQPO from df_countries where discounted = 0 group by 1;"</span>
<span class="n">q2</span> <span class="o">=</span> <span class="s">"SELECT ShipCountry, AVG(Quantity) as MeanQPO from df_countries where discounted = 1 group by 1;"</span>

<span class="n">fullprice_df</span> <span class="o">=</span> <span class="n">pysqldf</span><span class="p">(</span><span class="n">q1</span><span class="p">)</span>
<span class="n">discount_df</span> <span class="o">=</span> <span class="n">pysqldf</span><span class="p">(</span><span class="n">q2</span><span class="p">)</span>

<span class="n">fullprice_df</span><span class="p">[</span><span class="s">'Group'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'FullPrice'</span>
<span class="n">discount_df</span><span class="p">[</span><span class="s">'Group'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'Discount'</span>

<span class="n">country_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">fullprice_df</span><span class="p">,</span> <span class="n">discount_df</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="n">display</span><span class="p">(</span><span class="n">country_df</span><span class="p">.</span><span class="n">describe</span><span class="p">())</span>

<span class="c1">#ax = sns.barplot(x='ShipCountry', y='NumOrders', data=country_df, hue='Group', palette='pastel', orient='v')
#ax.set_title('Number of Fullprice vs Discount Orders by Country', fontdict={'family': 'monospace', 'size':16})
</span>
<span class="c1">#ax1 = sns.barplot(x='ShipCountry', y='TotalQty', data=country_df, hue='Group', palette='pastel', orient='v')
#ax1.set_title('Total Qty of Fullprice vs Discount Orders by Country', fontdict={'family': 'monospace', 'size':16})
</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">"Mean QPO by Country"</span><span class="p">)</span>

<span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'ShipCountry'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'MeanQPO'</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">country_df</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'Group'</span><span class="p">,</span> <span class="n">palette</span><span class="o">=</span><span class="s">'Greens_d'</span><span class="p">,</span> 
            <span class="n">orient</span><span class="o">=</span><span class="s">'v'</span><span class="p">,</span> <span class="n">capsize</span><span class="o">=</span><span class="p">.</span><span class="mi">2</span><span class="p">)</span>

<span class="c1">## Set Title,X/Y Labels,fonts,formatting
</span><span class="n">ax_font</span> <span class="o">=</span> <span class="p">{</span><span class="s">'family'</span><span class="p">:</span><span class="s">'monospace'</span><span class="p">,</span><span class="s">'weight'</span><span class="p">:</span><span class="s">'semibold'</span><span class="p">,</span><span class="s">'size'</span><span class="p">:</span><span class="mi">14</span><span class="p">}</span>
<span class="n">tick_font</span> <span class="o">=</span> <span class="p">{</span><span class="s">'size'</span><span class="p">:</span><span class="mi">12</span><span class="p">,</span><span class="s">'ha'</span><span class="p">:</span><span class="s">'center'</span><span class="p">,</span><span class="s">'rotation'</span><span class="p">:</span><span class="mi">45</span><span class="p">}</span>
<span class="n">t_label</span> <span class="o">=</span> <span class="s">"Average Order Quantity by Country: Fullprice vs Discount"</span>
<span class="n">t_font</span> <span class="o">=</span> <span class="p">{</span><span class="s">'family'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">18</span><span class="p">}</span>

<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">"Avg Qty per Order "</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">ax_font</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">"Country"</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">ax_font</span><span class="p">)</span>
<span class="c1">#ax.set_title('Average Order Quantity by Country: Fullprice vs Discount', fontdict={'family': 'PT Mono', 'size':16})
</span><span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="n">t_label</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="n">t_font</span><span class="p">)</span>

</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>MeanQPO</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>count</td>
      <td>39.000000</td>
    </tr>
    <tr>
      <td>mean</td>
      <td>22.596281</td>
    </tr>
    <tr>
      <td>std</td>
      <td>7.620086</td>
    </tr>
    <tr>
      <td>min</td>
      <td>9.970588</td>
    </tr>
    <tr>
      <td>25%</td>
      <td>17.458458</td>
    </tr>
    <tr>
      <td>50%</td>
      <td>21.750000</td>
    </tr>
    <tr>
      <td>75%</td>
      <td>25.985539</td>
    </tr>
    <tr>
      <td>max</td>
      <td>43.172414</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Average Order Quantity by Country: Fullprice vs Discount')
</code></pre></div></div>

<p><img src="output_85_2.png" alt="png" /></p>

<p>The above plots indicate that when a discount is offered, certain countries order higher quantities of products. Let‚Äôs look at the values to determine what percentage more they purchase when an order is discounted.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># add new col for countries where discount has significant effect
</span><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="n">df_countries</span><span class="p">[</span><span class="s">'effect_cqd'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_countries</span><span class="p">[</span><span class="s">'ShipCountry'</span><span class="p">].</span><span class="n">isin</span><span class="p">([</span><span class="s">'Spain'</span><span class="p">,</span> <span class="s">'UK'</span><span class="p">,</span> <span class="s">'USA'</span><span class="p">,</span> <span class="s">'Canada'</span><span class="p">])</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'ShipCountry'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Quantity'</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'effect_cqd'</span><span class="p">,</span> <span class="n">palette</span><span class="o">=</span><span class="s">'pastel'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_countries</span><span class="p">)</span>

</code></pre></div></div>

<p><img src="output_87_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">q1</span> <span class="o">=</span> <span class="s">"SELECT ShipCountry, Count(*) as OrderCount from df_countries where discounted = 0 group by 1;"</span>
<span class="n">q2</span> <span class="o">=</span> <span class="s">"SELECT ShipCountry, Count(*) as OrderCount from df_countries where discounted = 1 group by 1;"</span>

<span class="n">df_fpCount</span> <span class="o">=</span> <span class="n">pysqldf</span><span class="p">(</span><span class="n">q1</span><span class="p">)</span>
<span class="n">df_dcCount</span> <span class="o">=</span> <span class="n">pysqldf</span><span class="p">(</span><span class="n">q2</span><span class="p">)</span>

<span class="n">df_fpCount</span><span class="p">[</span><span class="s">'Group'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'FullPrice'</span>
<span class="n">df_dcCount</span><span class="p">[</span><span class="s">'Group'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'Discount'</span>

<span class="n">df_countryCount</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df_fpCount</span><span class="p">,</span> <span class="n">df_dcCount</span><span class="p">])</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">"Average Order Quantity by Country"</span><span class="p">)</span>

<span class="n">ax</span> <span class="o">=</span> <span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'ShipCountry'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'OrderCount'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_countryCount</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Order Count by Country'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'family'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">16</span><span class="p">})</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Order Count by Country')
</code></pre></div></div>

<p><img src="output_88_1.png" alt="png" /></p>

<h2 id="results">Results</h2>

<p>For certain individual countries (Spain, Canada, UK, USA), the null hypothesis is rejected with 95% certainty (alpha=0.05)</p>

<h1 id="h3-region--revenue">H3: Region &amp; Revenue</h1>

<p><strong>Does average revenue per order vary between different customer regions?</strong></p>

<p><strong>If so, how do the regions rank in terms of average revenue per order?</strong></p>

<p><em>Additional questions to explore:</em>
<strong>Does geographic distance between distributor and shipcountry have an effect on order quantity?</strong>
<strong>Does shipping cost have an effect on order quantity?</strong></p>

<h2 id="hypotheses-2">Hypotheses</h2>

<p>$H_0$ the average revenue per order is the same between different customer regions.</p>

<p>$H_1$ Alternate hypothesis: the average revenue per order is different (higher or lower) across different customer regions.</p>

<p><em>The alpha level (i.e. the probability of rejecting the null hypothesis when it is true) is = 0.05.</em></p>

<h2 id="eda-2">EDA</h2>

<p>Select the proper dataset for analysis, generate data groups for testing, perform EDA.</p>

<h3 id="select-1">Select</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Extract revenue per product per order
</span><span class="n">cur</span><span class="p">.</span><span class="n">execute</span><span class="p">(</span><span class="s">"""SELECT c.Region, od.OrderId, od.Quantity, od.UnitPrice, od.Discount
FROM Customer c
JOIN 'Order' o ON c.Id = o.CustomerId
JOIN OrderDetail od USING(OrderId);"""</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">cur</span><span class="p">.</span><span class="n">fetchall</span><span class="p">())</span>
<span class="n">df</span><span class="p">.</span> <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">cur</span><span class="p">.</span><span class="n">description</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2078
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Region</th>
      <th>OrderId</th>
      <th>Quantity</th>
      <th>UnitPrice</th>
      <th>Discount</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>Western Europe</td>
      <td>10248</td>
      <td>12</td>
      <td>14.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>1</td>
      <td>Western Europe</td>
      <td>10248</td>
      <td>10</td>
      <td>9.8</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Western Europe</td>
      <td>10248</td>
      <td>5</td>
      <td>34.8</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>3</td>
      <td>Western Europe</td>
      <td>10249</td>
      <td>9</td>
      <td>18.6</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>4</td>
      <td>Western Europe</td>
      <td>10249</td>
      <td>40</td>
      <td>42.4</td>
      <td>0.0</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Get total revenue per order
</span>
<span class="n">df</span><span class="p">[</span><span class="s">'Revenue'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">Quantity</span> <span class="o">*</span> <span class="n">df</span><span class="p">.</span><span class="n">UnitPrice</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">df</span><span class="p">.</span><span class="n">Discount</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Drop unnecessary columns
</span><span class="n">df</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Quantity'</span><span class="p">,</span> <span class="s">'UnitPrice'</span><span class="p">,</span> <span class="s">'Discount'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="group-2">Group</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Group data by order and get average revenue per order for each region
</span><span class="n">df_region</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'Region'</span><span class="p">,</span> <span class="s">'OrderId'</span><span class="p">])[</span><span class="s">'Revenue'</span><span class="p">].</span><span class="n">mean</span><span class="p">().</span><span class="n">reset_index</span><span class="p">()</span>
<span class="c1"># drop Order Id (no longer necessary)
</span><span class="n">df_region</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'OrderId'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># check changes
</span><span class="n">df_region</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Region</th>
      <th>Revenue</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>British Isles</td>
      <td>239.70</td>
    </tr>
    <tr>
      <td>1</td>
      <td>British Isles</td>
      <td>661.25</td>
    </tr>
    <tr>
      <td>2</td>
      <td>British Isles</td>
      <td>352.40</td>
    </tr>
    <tr>
      <td>3</td>
      <td>British Isles</td>
      <td>258.40</td>
    </tr>
    <tr>
      <td>4</td>
      <td>British Isles</td>
      <td>120.20</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Explore sample sizes before testing: n &gt; 30 to pass assumptions
</span><span class="n">df_region</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Region'</span><span class="p">).</span><span class="n">count</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Revenue</th>
    </tr>
    <tr>
      <th>Region</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>British Isles</td>
      <td>75</td>
    </tr>
    <tr>
      <td>Central America</td>
      <td>21</td>
    </tr>
    <tr>
      <td>Eastern Europe</td>
      <td>7</td>
    </tr>
    <tr>
      <td>North America</td>
      <td>152</td>
    </tr>
    <tr>
      <td>Northern Europe</td>
      <td>55</td>
    </tr>
    <tr>
      <td>Scandinavia</td>
      <td>28</td>
    </tr>
    <tr>
      <td>South America</td>
      <td>127</td>
    </tr>
    <tr>
      <td>Southern Europe</td>
      <td>64</td>
    </tr>
    <tr>
      <td>Western Europe</td>
      <td>272</td>
    </tr>
  </tbody>
</table>
</div>

<p>Some of the sample sizes are too small to ignore assumptions of normality. We can combine some regions to meet the required threshold of n &gt; 30.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Group sub-regions together to create sample sizes adequately large for ANOVA testing  (min 30)
</span>
<span class="c1"># Group Scandinavia, Northern and Eastern Europe
</span><span class="n">df_region</span><span class="p">.</span><span class="n">loc</span><span class="p">[(</span><span class="n">df_region</span><span class="p">.</span><span class="n">Region</span> <span class="o">==</span> <span class="s">'Scandinavia'</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">df_region</span><span class="p">.</span><span class="n">Region</span> <span class="o">==</span> <span class="s">'Eastern Europe'</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">df_region</span><span class="p">.</span><span class="n">Region</span> <span class="o">==</span> <span class="s">'Northern Europe'</span><span class="p">),</span> <span class="s">'Region'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'North Europe'</span>

<span class="c1"># Group South and Central America
</span><span class="n">df_region</span><span class="p">.</span><span class="n">loc</span><span class="p">[(</span><span class="n">df_region</span><span class="p">.</span><span class="n">Region</span> <span class="o">==</span> <span class="s">'South America'</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="n">df_region</span><span class="p">.</span><span class="n">Region</span> <span class="o">==</span> <span class="s">'Central America'</span><span class="p">),</span> <span class="s">'Region'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'South Americas'</span>

<span class="c1"># Review sizes of new groups
</span><span class="n">df_region</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Region'</span><span class="p">).</span><span class="n">count</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Revenue</th>
    </tr>
    <tr>
      <th>Region</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>British Isles</td>
      <td>75</td>
    </tr>
    <tr>
      <td>North America</td>
      <td>152</td>
    </tr>
    <tr>
      <td>North Europe</td>
      <td>90</td>
    </tr>
    <tr>
      <td>South Americas</td>
      <td>148</td>
    </tr>
    <tr>
      <td>Southern Europe</td>
      <td>64</td>
    </tr>
    <tr>
      <td>Western Europe</td>
      <td>272</td>
    </tr>
  </tbody>
</table>
</div>

<h3 id="explore-2">Explore</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>

<span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">grp0</span><span class="p">)</span>
<span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">grp1</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">([</span><span class="s">'Full Price'</span><span class="p">,</span><span class="s">'Discounted'</span><span class="p">])</span>

<span class="c1"># Plot number of orders, total revenue, and average revenue per order by region
</span><span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="n">ax1</span><span class="p">,</span> <span class="n">ax2</span><span class="p">,</span> <span class="n">ax3</span><span class="p">)</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="c1"># Number of orders
</span><span class="n">df_region</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'Region'</span><span class="p">])[</span><span class="s">'Revenue'</span><span class="p">].</span><span class="n">count</span><span class="p">().</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'barh'</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax1</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'b'</span><span class="p">)</span>

<span class="c1"># Total Revenue
</span><span class="n">df_region</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'Region'</span><span class="p">])[</span><span class="s">'Revenue'</span><span class="p">].</span><span class="nb">sum</span><span class="p">().</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'barh'</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax2</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'r'</span><span class="p">)</span>

<span class="c1"># Average Revenue
</span><span class="n">df_region</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'Region'</span><span class="p">])[</span><span class="s">'Revenue'</span><span class="p">].</span><span class="n">mean</span><span class="p">().</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'barh'</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax3</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'g'</span><span class="p">)</span>

<span class="c1"># Label plots and axes
</span><span class="n">ax1</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Total Orders'</span><span class="p">)</span>
<span class="n">ax1</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">''</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Total Revenue in US$'</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">''</span><span class="p">)</span>
<span class="n">ax3</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Average Revenue per Order US$'</span><span class="p">)</span>
<span class="n">ax3</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">''</span><span class="p">)</span>

<span class="n">fig</span><span class="p">.</span><span class="n">subplots_adjust</span><span class="p">(</span><span class="n">hspace</span><span class="o">=</span><span class="mf">0.4</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_104_0.png" alt="png" /></p>

<p><img src="output_104_1.png" alt="png" /></p>

<p>The graphs show that Western Europe is the region with the greatest number of orders, and also has the greatest total revenue. However, North America has the most expensive order on average (followed by Western Europe). Southern and Eastern Europe has the lowest number of orders, lowest total revenue, and cheapest order on average. The third graph lent support to the alternate hypothesis that there are significant differences in average order revenue between regions.</p>

<h2 id="test-1">Test</h2>

<h3 id="sample-size-2">Sample Size</h3>
<p>Check if sample sizes allow us to ignore assumptions of normality</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># visualize sample size comparisons, check normality (pvals)
</span><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>

<span class="n">ax</span> <span class="o">=</span> <span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Region'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Revenue'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_region</span><span class="p">,</span> <span class="n">ci</span><span class="o">=</span><span class="mi">68</span><span class="p">,</span> <span class="n">palette</span><span class="o">=</span><span class="s">"pastel"</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">'Region'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Average Order Revenue by Region'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'family'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">16</span><span class="p">})</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Average Order Revenue by Region')
</code></pre></div></div>

<p><img src="output_108_1.png" alt="png" /></p>

<h3 id="normality">Normality</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<h3 id="statistical">Statistical</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">statsmodels.api</span> <span class="k">as</span> <span class="n">sm</span>
<span class="kn">from</span> <span class="nn">statsmodels.formula.api</span> <span class="kn">import</span> <span class="n">ols</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">ols</span><span class="p">(</span><span class="s">"Revenue~C(Region)+Revenue:C(Region)"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_region</span><span class="p">).</span><span class="n">fit</span><span class="p">()</span>
<span class="n">anova_table</span> <span class="o">=</span> <span class="n">sm</span><span class="p">.</span><span class="n">stats</span><span class="p">.</span><span class="n">anova_lm</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">typ</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="c1"># reformat scientific notation of results for easier interpretation
</span><span class="n">anova_table</span><span class="p">.</span><span class="n">style</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="s">"{:.5f}"</span><span class="p">,</span> <span class="n">subset</span><span class="o">=</span><span class="p">[</span><span class="s">'PR(&gt;F)'</span><span class="p">])</span>
</code></pre></div></div>

<style type="text/css">
</style>
<table id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054"><thead>    <tr>        <th class="blank level0"></th>        <th class="col_heading level0 col0">sum_sq</th>        <th class="col_heading level0 col1">df</th>        <th class="col_heading level0 col2">F</th>        <th class="col_heading level0 col3">PR(&gt;F)</th>    </tr></thead><tbody>
                <tr>
                        <th id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054level0_row0" class="row_heading level0 row0">C(Region)</th>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row0_col0" class="data row0 col0">1.03486e+07</td>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row0_col1" class="data row0 col1">5</td>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row0_col2" class="data row0 col2">3.98262e+30</td>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row0_col3" class="data row0 col3">0.00000</td>
            </tr>
            <tr>
                        <th id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054level0_row1" class="row_heading level0 row1">Revenue:C(Region)</th>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row1_col0" class="data row1 col0">5.34162e+08</td>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row1_col1" class="data row1 col1">6</td>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row1_col2" class="data row1 col2">1.71309e+32</td>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row1_col3" class="data row1 col3">0.00000</td>
            </tr>
            <tr>
                        <th id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054level0_row2" class="row_heading level0 row2">Residual</th>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row2_col0" class="data row2 col0">4.10034e-22</td>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row2_col1" class="data row2 col1">789</td>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row2_col2" class="data row2 col2">nan</td>
                        <td id="T_60364b3e_29bb_11ea_9ec9_f40f2405a054row2_col3" class="data row2 col3">nan</td>
            </tr>
    </tbody></table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># run tukey test for OQD (Order Quantity Discount) 
</span><span class="n">data</span> <span class="o">=</span> <span class="n">df_region</span><span class="p">[</span><span class="s">'Revenue'</span><span class="p">].</span><span class="n">values</span>
<span class="n">labels</span> <span class="o">=</span> <span class="n">df_region</span><span class="p">[</span><span class="s">'Region'</span><span class="p">].</span><span class="n">values</span>

<span class="kn">import</span> <span class="nn">statsmodels.api</span> <span class="k">as</span> <span class="n">sms</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">sms</span><span class="p">.</span><span class="n">stats</span><span class="p">.</span><span class="n">multicomp</span><span class="p">.</span><span class="n">pairwise_tukeyhsd</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="n">labels</span><span class="p">)</span>

<span class="c1"># save OQD tukey test model results into dataframe (OQD: order quantity discount)
</span><span class="n">tukey_OQD</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">model</span><span class="p">.</span><span class="n">_results_table</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="n">columns</span><span class="o">=</span><span class="n">model</span><span class="p">.</span><span class="n">_results_table</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="n">tukey_OQD</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>group1</th>
      <th>group2</th>
      <th>meandiff</th>
      <th>p-adj</th>
      <th>lower</th>
      <th>upper</th>
      <th>reject</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>British Isles</td>
      <td>North America</td>
      <td>116.4615</td>
      <td>0.9</td>
      <td>-213.9625</td>
      <td>446.8854</td>
      <td>False</td>
    </tr>
    <tr>
      <td>1</td>
      <td>British Isles</td>
      <td>North Europe</td>
      <td>-88.1693</td>
      <td>0.9</td>
      <td>-454.2704</td>
      <td>277.9318</td>
      <td>False</td>
    </tr>
    <tr>
      <td>2</td>
      <td>British Isles</td>
      <td>South Americas</td>
      <td>-84.2501</td>
      <td>0.9</td>
      <td>-416.146</td>
      <td>247.6458</td>
      <td>False</td>
    </tr>
    <tr>
      <td>3</td>
      <td>British Isles</td>
      <td>Southern Europe</td>
      <td>-271.7815</td>
      <td>0.3745</td>
      <td>-670.2535</td>
      <td>126.6904</td>
      <td>False</td>
    </tr>
    <tr>
      <td>4</td>
      <td>British Isles</td>
      <td>Western Europe</td>
      <td>81.6889</td>
      <td>0.9</td>
      <td>-223.7052</td>
      <td>387.083</td>
      <td>False</td>
    </tr>
    <tr>
      <td>5</td>
      <td>North America</td>
      <td>North Europe</td>
      <td>-204.6308</td>
      <td>0.4191</td>
      <td>-516.0716</td>
      <td>106.8101</td>
      <td>False</td>
    </tr>
    <tr>
      <td>6</td>
      <td>North America</td>
      <td>South Americas</td>
      <td>-200.7115</td>
      <td>0.2778</td>
      <td>-471.1191</td>
      <td>69.6961</td>
      <td>False</td>
    </tr>
    <tr>
      <td>7</td>
      <td>North America</td>
      <td>Southern Europe</td>
      <td>-388.243</td>
      <td>0.0191</td>
      <td>-737.1631</td>
      <td>-39.3228</td>
      <td>True</td>
    </tr>
    <tr>
      <td>8</td>
      <td>North America</td>
      <td>Western Europe</td>
      <td>-34.7725</td>
      <td>0.9</td>
      <td>-271.9032</td>
      <td>202.3581</td>
      <td>False</td>
    </tr>
    <tr>
      <td>9</td>
      <td>North Europe</td>
      <td>South Americas</td>
      <td>3.9193</td>
      <td>0.9</td>
      <td>-309.0829</td>
      <td>316.9214</td>
      <td>False</td>
    </tr>
    <tr>
      <td>10</td>
      <td>North Europe</td>
      <td>Southern Europe</td>
      <td>-183.6122</td>
      <td>0.7177</td>
      <td>-566.4899</td>
      <td>199.2655</td>
      <td>False</td>
    </tr>
    <tr>
      <td>11</td>
      <td>North Europe</td>
      <td>Western Europe</td>
      <td>169.8582</td>
      <td>0.5251</td>
      <td>-114.889</td>
      <td>454.6055</td>
      <td>False</td>
    </tr>
    <tr>
      <td>12</td>
      <td>South Americas</td>
      <td>Southern Europe</td>
      <td>-187.5315</td>
      <td>0.6259</td>
      <td>-537.8459</td>
      <td>162.783</td>
      <td>False</td>
    </tr>
    <tr>
      <td>13</td>
      <td>South Americas</td>
      <td>Western Europe</td>
      <td>165.939</td>
      <td>0.3541</td>
      <td>-73.2385</td>
      <td>405.1164</td>
      <td>False</td>
    </tr>
    <tr>
      <td>14</td>
      <td>Southern Europe</td>
      <td>Western Europe</td>
      <td>353.4704</td>
      <td>0.0242</td>
      <td>28.1539</td>
      <td>678.787</td>
      <td>True</td>
    </tr>
  </tbody>
</table>
</div>

<p>North America and Southern Europe:  pval = 0.01, mean diff: -388.24</p>

<p>Southern Europe and Western Europe: pval = 0.02, mean diff: 353.4704</p>

<h3 id="effect-size-2">Effect Size</h3>

<p>Cohen‚Äôs D</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">northamerica</span> <span class="o">=</span> <span class="n">df_region</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df_region</span><span class="p">[</span><span class="s">'Region'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'North America'</span><span class="p">]</span>
<span class="n">southerneurope</span> <span class="o">=</span> <span class="n">df_region</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df_region</span><span class="p">[</span><span class="s">'Region'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'Southern Europe'</span><span class="p">]</span>
<span class="n">westerneurope</span> <span class="o">=</span> <span class="n">df_region</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df_region</span><span class="p">[</span><span class="s">'Region'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'Western Europe'</span><span class="p">]</span>

<span class="n">na_se</span> <span class="o">=</span> <span class="n">Cohen_d</span><span class="p">(</span><span class="n">northamerica</span><span class="p">.</span><span class="n">Revenue</span><span class="p">,</span> <span class="n">southerneurope</span><span class="p">.</span><span class="n">Revenue</span><span class="p">)</span>
<span class="n">se_we</span> <span class="o">=</span> <span class="n">Cohen_d</span><span class="p">(</span><span class="n">southerneurope</span><span class="p">.</span><span class="n">Revenue</span><span class="p">,</span> <span class="n">westerneurope</span><span class="p">.</span><span class="n">Revenue</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">na_se</span><span class="p">,</span> <span class="n">se_we</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.5891669383438923 -0.5462384714677272
</code></pre></div></div>

<h2 id="post-hoc-tests-2">Post-Hoc Tests</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># log-transforming revenue per order
</span><span class="n">logRegion_df</span> <span class="o">=</span> <span class="n">df_region</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">logRegion_df</span><span class="p">[</span><span class="s">'Revenue'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">df_region</span><span class="p">[</span><span class="s">'Revenue'</span><span class="p">])</span>

<span class="c1"># Plotting the distributions for the log-transformed data
</span><span class="n">sns</span><span class="p">.</span><span class="n">set_style</span><span class="p">(</span><span class="s">"whitegrid"</span><span class="p">)</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">"Distribution of Revenue Per Order by Region"</span><span class="p">)</span>

<span class="k">for</span> <span class="n">region</span> <span class="ow">in</span> <span class="nb">set</span><span class="p">(</span><span class="n">logRegion_df</span><span class="p">.</span><span class="n">Region</span><span class="p">):</span>
    <span class="n">region_group</span> <span class="o">=</span> <span class="n">logRegion_df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">logRegion_df</span><span class="p">[</span><span class="s">'Region'</span><span class="p">]</span> <span class="o">==</span> <span class="n">region</span><span class="p">]</span>
    <span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">region_group</span><span class="p">[</span><span class="s">'Revenue'</span><span class="p">],</span> <span class="n">hist_kws</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">),</span> <span class="n">label</span><span class="o">=</span><span class="n">region</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">()</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_label</span><span class="p">(</span><span class="s">'Revenue per Order (log-transformed)'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="output_118_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># The data is more normally distributed, and variances from the mean were more similar. 
# run an ANOVA test:
</span>
<span class="c1"># Fitting a model of revenue per order on Region categories - ANOVA table
</span><span class="n">lm</span> <span class="o">=</span> <span class="n">ols</span><span class="p">(</span><span class="s">'Revenue ~ C(Region)'</span><span class="p">,</span> <span class="n">logRegion_df</span><span class="p">).</span><span class="n">fit</span><span class="p">()</span>
<span class="n">sm</span><span class="p">.</span><span class="n">stats</span><span class="p">.</span><span class="n">anova_lm</span><span class="p">(</span><span class="n">lm</span><span class="p">,</span> <span class="n">typ</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sum_sq</th>
      <th>df</th>
      <th>F</th>
      <th>PR(&gt;F)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>C(Region)</td>
      <td>48.004167</td>
      <td>5.0</td>
      <td>12.076998</td>
      <td>2.713885e-11</td>
    </tr>
    <tr>
      <td>Residual</td>
      <td>631.999979</td>
      <td>795.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>

<h2 id="results-1">Results</h2>

<p>At an alpha level of 0.05 significance, revenue does vary between regions and therefore the null hypothesis is rejected.</p>

<p>The ANOVA table above revealed that the p-value is lower than the alpha value of 0.05. Therefore I was able to reject the null hypothesis and accept the alternate hypothesis. There are statistically significant differences in average order value between different regions, i.e. customers from different parts of the world spend different amounts of money on their orders, on average.
Conclusions
Business insights:
There are statistically significant differences in the average revenue per order from customers from different regions.
Western European customers place the most orders, and are the single biggest contributors to Northwind‚Äôs bottom line. However, although North American customers have placed roughly half as many orders as those from Western Europe, they spend more per order, on average.
The difference between the region with the most expensive orders on average (North America, $1,945.93) and the region with the least expensive orders (Southern and Eastern Europe, $686.73) is $1,259.20, or 2.8 times more for orders from North America.
Southern and Eastern Europe has the smallest number of orders, the lowest total revenue, and the lowest average revenue per order.
North American customers have placed a similar number of orders to those from South and Central America, but their average expenditure per order is 1.8 times higher.
Potential business actions and directions for future work:
If Northwind was looking to focus on more profitable customers, a potential action would be to stop serving customers in Southern and Eastern Europe, and to focus more on customers in Western Europe and North America.
However, further analysis would be needed to confirm these findings. For example, it might be the case that some more expensive products are only available in certain regions.</p>

<hr />

<h1 id="h4-seasonquantityproductcategory">H4: Season+Quantity:ProductCategory</h1>

<p>1: <strong>Does time of year (month) have an effect on order quantity overall?</strong></p>

<p>2: <strong>Does time of year (month) have an effect on order quantity of specific product categories?</strong></p>

<p>3: <strong>Does time of year (month) have an effect on order quantity by region?</strong></p>

<h2 id="hypotheses-3">Hypotheses</h2>

<ul>
  <li>
    <p>$ùêª_1$  : Time of year has a statistically significant effect on average quantity per order.</p>
  </li>
  <li>
    <p>$ùêª_0$ : Time of year has no relationship with average quantity per order.</p>
  </li>
</ul>

<h2 id="eda-3">EDA</h2>
<ul>
  <li>Select proper dataset for analysis: orderDetail, order</li>
  <li>Generate data groups for testing: number of orders per month, order quantity per month</li>
  <li>Explore data (sample sizes, distribution/density)</li>
</ul>

<h3 id="select-2">Select</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_months</span> <span class="o">=</span> <span class="n">df_orderDetail</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df_order</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'OrderId'</span><span class="p">,</span> <span class="n">copy</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">df_months</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Id</th>
      <th>OrderId</th>
      <th>ProductId</th>
      <th>UnitPrice</th>
      <th>Quantity</th>
      <th>Discount</th>
      <th>discounted</th>
      <th>CustomerId</th>
      <th>EmployeeId</th>
      <th>OrderDate</th>
      <th>RequiredDate</th>
      <th>ShippedDate</th>
      <th>ShipVia</th>
      <th>Freight</th>
      <th>ShipName</th>
      <th>ShipAddress</th>
      <th>ShipCity</th>
      <th>ShipRegion</th>
      <th>ShipPostalCode</th>
      <th>ShipCountry</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>10248/11</td>
      <td>10248</td>
      <td>11</td>
      <td>14.0</td>
      <td>12</td>
      <td>0.0</td>
      <td>0</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-07-04</td>
      <td>2012-08-01</td>
      <td>2012-07-16</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
    </tr>
    <tr>
      <td>1</td>
      <td>10248/42</td>
      <td>10248</td>
      <td>42</td>
      <td>9.8</td>
      <td>10</td>
      <td>0.0</td>
      <td>0</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-07-04</td>
      <td>2012-08-01</td>
      <td>2012-07-16</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
    </tr>
    <tr>
      <td>2</td>
      <td>10248/72</td>
      <td>10248</td>
      <td>72</td>
      <td>34.8</td>
      <td>5</td>
      <td>0.0</td>
      <td>0</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-07-04</td>
      <td>2012-08-01</td>
      <td>2012-07-16</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
    </tr>
    <tr>
      <td>3</td>
      <td>10249/14</td>
      <td>10249</td>
      <td>14</td>
      <td>18.6</td>
      <td>9</td>
      <td>0.0</td>
      <td>0</td>
      <td>TOMSP</td>
      <td>6</td>
      <td>2012-07-05</td>
      <td>2012-08-16</td>
      <td>2012-07-10</td>
      <td>1</td>
      <td>11.61</td>
      <td>Toms Spezialit√§ten</td>
      <td>Luisenstr. 48</td>
      <td>M√ºnster</td>
      <td>Western Europe</td>
      <td>44087</td>
      <td>Germany</td>
    </tr>
    <tr>
      <td>4</td>
      <td>10249/51</td>
      <td>10249</td>
      <td>51</td>
      <td>42.4</td>
      <td>40</td>
      <td>0.0</td>
      <td>0</td>
      <td>TOMSP</td>
      <td>6</td>
      <td>2012-07-05</td>
      <td>2012-08-16</td>
      <td>2012-07-10</td>
      <td>1</td>
      <td>11.61</td>
      <td>Toms Spezialit√§ten</td>
      <td>Luisenstr. 48</td>
      <td>M√ºnster</td>
      <td>Western Europe</td>
      <td>44087</td>
      <td>Germany</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pd</span><span class="p">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df_months</span><span class="p">[</span><span class="s">'OrderDate'</span><span class="p">],</span> <span class="nb">format</span><span class="o">=</span><span class="s">'%Y/%m/%d'</span><span class="p">).</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0   2012-07-04
1   2012-07-04
2   2012-07-04
3   2012-07-05
4   2012-07-05
Name: OrderDate, dtype: datetime64[ns]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_months</span><span class="p">[</span><span class="s">'OrderMonth'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DatetimeIndex</span><span class="p">(</span><span class="n">df_months</span><span class="p">[</span><span class="s">'OrderDate'</span><span class="p">]).</span><span class="n">month</span>
<span class="n">df_months</span><span class="p">[</span><span class="s">'OrderYear'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DatetimeIndex</span><span class="p">(</span><span class="n">df_months</span><span class="p">[</span><span class="s">'OrderDate'</span><span class="p">]).</span><span class="n">year</span>
<span class="n">df_months</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Id</th>
      <th>OrderId</th>
      <th>ProductId</th>
      <th>UnitPrice</th>
      <th>Quantity</th>
      <th>Discount</th>
      <th>discounted</th>
      <th>CustomerId</th>
      <th>EmployeeId</th>
      <th>OrderDate</th>
      <th>...</th>
      <th>ShipVia</th>
      <th>Freight</th>
      <th>ShipName</th>
      <th>ShipAddress</th>
      <th>ShipCity</th>
      <th>ShipRegion</th>
      <th>ShipPostalCode</th>
      <th>ShipCountry</th>
      <th>OrderMonth</th>
      <th>OrderYear</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>10248/11</td>
      <td>10248</td>
      <td>11</td>
      <td>14.0</td>
      <td>12</td>
      <td>0.0</td>
      <td>0</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-07-04</td>
      <td>...</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>1</td>
      <td>10248/42</td>
      <td>10248</td>
      <td>42</td>
      <td>9.8</td>
      <td>10</td>
      <td>0.0</td>
      <td>0</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-07-04</td>
      <td>...</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>2</td>
      <td>10248/72</td>
      <td>10248</td>
      <td>72</td>
      <td>34.8</td>
      <td>5</td>
      <td>0.0</td>
      <td>0</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-07-04</td>
      <td>...</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>3</td>
      <td>10249/14</td>
      <td>10249</td>
      <td>14</td>
      <td>18.6</td>
      <td>9</td>
      <td>0.0</td>
      <td>0</td>
      <td>TOMSP</td>
      <td>6</td>
      <td>2012-07-05</td>
      <td>...</td>
      <td>1</td>
      <td>11.61</td>
      <td>Toms Spezialit√§ten</td>
      <td>Luisenstr. 48</td>
      <td>M√ºnster</td>
      <td>Western Europe</td>
      <td>44087</td>
      <td>Germany</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>4</td>
      <td>10249/51</td>
      <td>10249</td>
      <td>51</td>
      <td>42.4</td>
      <td>40</td>
      <td>0.0</td>
      <td>0</td>
      <td>TOMSP</td>
      <td>6</td>
      <td>2012-07-05</td>
      <td>...</td>
      <td>1</td>
      <td>11.61</td>
      <td>Toms Spezialit√§ten</td>
      <td>Luisenstr. 48</td>
      <td>M√ºnster</td>
      <td>Western Europe</td>
      <td>44087</td>
      <td>Germany</td>
      <td>7</td>
      <td>2012</td>
    </tr>
  </tbody>
</table>
<p>5 rows √ó 22 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_months</span><span class="p">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'OrderDate'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">df_months</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Id</th>
      <th>OrderId</th>
      <th>ProductId</th>
      <th>UnitPrice</th>
      <th>Quantity</th>
      <th>Discount</th>
      <th>discounted</th>
      <th>CustomerId</th>
      <th>EmployeeId</th>
      <th>RequiredDate</th>
      <th>...</th>
      <th>ShipVia</th>
      <th>Freight</th>
      <th>ShipName</th>
      <th>ShipAddress</th>
      <th>ShipCity</th>
      <th>ShipRegion</th>
      <th>ShipPostalCode</th>
      <th>ShipCountry</th>
      <th>OrderMonth</th>
      <th>OrderYear</th>
    </tr>
    <tr>
      <th>OrderDate</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2012-07-04</td>
      <td>10248/11</td>
      <td>10248</td>
      <td>11</td>
      <td>14.0</td>
      <td>12</td>
      <td>0.0</td>
      <td>0</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-08-01</td>
      <td>...</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>2012-07-04</td>
      <td>10248/42</td>
      <td>10248</td>
      <td>42</td>
      <td>9.8</td>
      <td>10</td>
      <td>0.0</td>
      <td>0</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-08-01</td>
      <td>...</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>2012-07-04</td>
      <td>10248/72</td>
      <td>10248</td>
      <td>72</td>
      <td>34.8</td>
      <td>5</td>
      <td>0.0</td>
      <td>0</td>
      <td>VINET</td>
      <td>5</td>
      <td>2012-08-01</td>
      <td>...</td>
      <td>3</td>
      <td>32.38</td>
      <td>Vins et alcools Chevalier</td>
      <td>59 rue de l'Abbaye</td>
      <td>Reims</td>
      <td>Western Europe</td>
      <td>51100</td>
      <td>France</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>2012-07-05</td>
      <td>10249/14</td>
      <td>10249</td>
      <td>14</td>
      <td>18.6</td>
      <td>9</td>
      <td>0.0</td>
      <td>0</td>
      <td>TOMSP</td>
      <td>6</td>
      <td>2012-08-16</td>
      <td>...</td>
      <td>1</td>
      <td>11.61</td>
      <td>Toms Spezialit√§ten</td>
      <td>Luisenstr. 48</td>
      <td>M√ºnster</td>
      <td>Western Europe</td>
      <td>44087</td>
      <td>Germany</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>2012-07-05</td>
      <td>10249/51</td>
      <td>10249</td>
      <td>51</td>
      <td>42.4</td>
      <td>40</td>
      <td>0.0</td>
      <td>0</td>
      <td>TOMSP</td>
      <td>6</td>
      <td>2012-08-16</td>
      <td>...</td>
      <td>1</td>
      <td>11.61</td>
      <td>Toms Spezialit√§ten</td>
      <td>Luisenstr. 48</td>
      <td>M√ºnster</td>
      <td>Western Europe</td>
      <td>44087</td>
      <td>Germany</td>
      <td>7</td>
      <td>2012</td>
    </tr>
  </tbody>
</table>
<p>5 rows √ó 21 columns</p>
</div>

<h3 id="group-3">Group</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create seasonal-based dataframe with only columns we need
#keep_cols = ['OrderId', 'ProductId', 'UnitPrice', 'Quantity', 'ShipCountry', 'OrderMonth', 'OrderYear', 'Season']
</span><span class="n">drop_cols</span> <span class="o">=</span> <span class="p">[</span><span class="s">'OrderId'</span><span class="p">,</span> <span class="s">'discounted'</span><span class="p">,</span> <span class="s">'CustomerId'</span><span class="p">,</span> <span class="s">'EmployeeId'</span><span class="p">,</span> <span class="s">'Freight'</span><span class="p">,</span> <span class="s">'RequiredDate'</span><span class="p">,</span> <span class="s">'ShippedDate'</span><span class="p">,</span> <span class="s">'ShipVia'</span><span class="p">,</span> <span class="s">'ShipName'</span><span class="p">,</span> <span class="s">'ShipAddress'</span><span class="p">,</span> <span class="s">'ShipCity'</span><span class="p">,</span> <span class="s">'ShipPostalCode'</span><span class="p">]</span>
<span class="n">df_monthly</span> <span class="o">=</span> <span class="n">df_months</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">df_monthly</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">drop_cols</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">df_monthly</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Id</th>
      <th>ProductId</th>
      <th>UnitPrice</th>
      <th>Quantity</th>
      <th>Discount</th>
      <th>ShipRegion</th>
      <th>ShipCountry</th>
      <th>OrderMonth</th>
      <th>OrderYear</th>
    </tr>
    <tr>
      <th>OrderDate</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2012-07-04</td>
      <td>10248/11</td>
      <td>11</td>
      <td>14.0</td>
      <td>12</td>
      <td>0.0</td>
      <td>Western Europe</td>
      <td>France</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>2012-07-04</td>
      <td>10248/42</td>
      <td>42</td>
      <td>9.8</td>
      <td>10</td>
      <td>0.0</td>
      <td>Western Europe</td>
      <td>France</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>2012-07-04</td>
      <td>10248/72</td>
      <td>72</td>
      <td>34.8</td>
      <td>5</td>
      <td>0.0</td>
      <td>Western Europe</td>
      <td>France</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>2012-07-05</td>
      <td>10249/14</td>
      <td>14</td>
      <td>18.6</td>
      <td>9</td>
      <td>0.0</td>
      <td>Western Europe</td>
      <td>Germany</td>
      <td>7</td>
      <td>2012</td>
    </tr>
    <tr>
      <td>2012-07-05</td>
      <td>10249/51</td>
      <td>51</td>
      <td>42.4</td>
      <td>40</td>
      <td>0.0</td>
      <td>Western Europe</td>
      <td>Germany</td>
      <td>7</td>
      <td>2012</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">meanqpo</span> <span class="o">=</span> <span class="n">df_monthly</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'OrderMonth'</span><span class="p">)[</span><span class="s">'Quantity'</span><span class="p">].</span><span class="n">mean</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="explore-3">Explore</h3>

<h2 id="test-2">Test</h2>

<h3 id="sample-size-3">Sample Size</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="n">set_style</span><span class="p">(</span><span class="s">"whitegrid"</span><span class="p">)</span>
<span class="o">%</span><span class="n">config</span> <span class="n">InlineBackend</span><span class="p">.</span><span class="n">figure_format</span><span class="o">=</span><span class="s">'retina'</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>


<span class="c1"># Check if sample sizes allow us to ignore assumptions;
# visualize sample size comparisons for two groups (normality check)
</span><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'OrderMonth'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Quantity'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_monthly</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Monthly Order Qty'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'family'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">16</span><span class="p">})</span>


</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Monthly Order Qty')
</code></pre></div></div>

<p><img src="output_136_1.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="n">set_style</span><span class="p">(</span><span class="s">"whitegrid"</span><span class="p">)</span>
<span class="o">%</span><span class="n">config</span> <span class="n">InlineBackend</span><span class="p">.</span><span class="n">figure_format</span><span class="o">=</span><span class="s">'retina'</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>


<span class="c1"># Check if sample sizes allow us to ignore assumptions;
# visualize sample size comparisons for two groups (normality check)
</span><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">8</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">sns</span><span class="p">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'OrderMonth'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Quantity'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_monthly</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Monthly Order Qty'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'family'</span><span class="p">:</span> <span class="s">'PT Mono'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">16</span><span class="p">})</span>


</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Monthly Order Qty')
</code></pre></div></div>

<p><img src="output_137_1.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Anova Test - Season + Quantity ()
</span>
<span class="kn">import</span> <span class="nn">statsmodels.api</span> <span class="k">as</span> <span class="n">sm</span>
<span class="kn">from</span> <span class="nn">statsmodels.formula.api</span> <span class="kn">import</span> <span class="n">ols</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">ols</span><span class="p">(</span><span class="s">"Quantity~C(OrderMonth)+Quantity:C(OrderMonth)"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df_monthly</span><span class="p">).</span><span class="n">fit</span><span class="p">()</span>
<span class="n">anova_table</span> <span class="o">=</span> <span class="n">sm</span><span class="p">.</span><span class="n">stats</span><span class="p">.</span><span class="n">anova_lm</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">typ</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="c1"># reformat scientific notation of results for easier interpretation
</span><span class="n">anova_table</span><span class="p">.</span><span class="n">style</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="s">"{:.5f}"</span><span class="p">,</span> <span class="n">subset</span><span class="o">=</span><span class="p">[</span><span class="s">'PR(&gt;F)'</span><span class="p">])</span>
</code></pre></div></div>

<style type="text/css">
</style>
<table id="T_6ac9e970_29bb_11ea_8476_f40f2405a054"><thead>    <tr>        <th class="blank level0"></th>        <th class="col_heading level0 col0">sum_sq</th>        <th class="col_heading level0 col1">df</th>        <th class="col_heading level0 col2">F</th>        <th class="col_heading level0 col3">PR(&gt;F)</th>    </tr></thead><tbody>
                <tr>
                        <th id="T_6ac9e970_29bb_11ea_8476_f40f2405a054level0_row0" class="row_heading level0 row0">C(OrderMonth)</th>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row0_col0" class="data row0 col0">7395.98</td>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row0_col1" class="data row0 col1">11</td>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row0_col2" class="data row0 col2">2.94204e+29</td>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row0_col3" class="data row0 col3">0.00000</td>
            </tr>
            <tr>
                        <th id="T_6ac9e970_29bb_11ea_8476_f40f2405a054level0_row1" class="row_heading level0 row1">Quantity:C(OrderMonth)</th>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row1_col0" class="data row1 col0">772004</td>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row1_col1" class="data row1 col1">12</td>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row1_col2" class="data row1 col2">2.81504e+31</td>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row1_col3" class="data row1 col3">0.00000</td>
            </tr>
            <tr>
                        <th id="T_6ac9e970_29bb_11ea_8476_f40f2405a054level0_row2" class="row_heading level0 row2">Residual</th>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row2_col0" class="data row2 col0">4.87009e-24</td>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row2_col1" class="data row2 col1">2131</td>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row2_col2" class="data row2 col2">nan</td>
                        <td id="T_6ac9e970_29bb_11ea_8476_f40f2405a054row2_col3" class="data row2 col3">nan</td>
            </tr>
    </tbody></table>

<h3 id="normality-1">Normality</h3>

<h3 id="statistical-1">Statistical</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># split orders into two groups (series): discount and fullprice order quantity
</span><span class="n">Jan</span> <span class="o">=</span> <span class="n">df_monthly</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'OrderMonth'</span><span class="p">).</span><span class="n">get_group</span><span class="p">(</span><span class="mi">1</span><span class="p">)[</span><span class="s">'Quantity'</span><span class="p">]</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># run tukey test for OQD (Order Quantity Discount) 
</span><span class="n">data</span> <span class="o">=</span> <span class="n">df_monthly</span><span class="p">[</span><span class="s">'Quantity'</span><span class="p">].</span><span class="n">values</span>
<span class="n">labels</span> <span class="o">=</span> <span class="n">df_monthly</span><span class="p">[</span><span class="s">'OrderMonth'</span><span class="p">].</span><span class="n">values</span>

<span class="kn">import</span> <span class="nn">statsmodels.api</span> <span class="k">as</span> <span class="n">sms</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">sms</span><span class="p">.</span><span class="n">stats</span><span class="p">.</span><span class="n">multicomp</span><span class="p">.</span><span class="n">pairwise_tukeyhsd</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="n">labels</span><span class="p">)</span>

<span class="c1"># save OQD tukey test model results into dataframe (OQD: order quantity discount)
</span><span class="n">tukey_OQD</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">model</span><span class="p">.</span><span class="n">_results_table</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="n">columns</span><span class="o">=</span><span class="n">model</span><span class="p">.</span><span class="n">_results_table</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="n">tukey_OQD</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>group1</th>
      <th>group2</th>
      <th>meandiff</th>
      <th>p-adj</th>
      <th>lower</th>
      <th>upper</th>
      <th>reject</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>1.3492</td>
      <td>0.9</td>
      <td>-4.6052</td>
      <td>7.3037</td>
      <td>False</td>
    </tr>
    <tr>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>-1.8729</td>
      <td>0.9</td>
      <td>-7.4759</td>
      <td>3.73</td>
      <td>False</td>
    </tr>
    <tr>
      <td>2</td>
      <td>1</td>
      <td>4</td>
      <td>0.5014</td>
      <td>0.9</td>
      <td>-5.0704</td>
      <td>6.0733</td>
      <td>False</td>
    </tr>
    <tr>
      <td>3</td>
      <td>1</td>
      <td>5</td>
      <td>-4.852</td>
      <td>0.358</td>
      <td>-11.2668</td>
      <td>1.5627</td>
      <td>False</td>
    </tr>
    <tr>
      <td>4</td>
      <td>1</td>
      <td>6</td>
      <td>-3.2421</td>
      <td>0.9</td>
      <td>-11.428</td>
      <td>4.9438</td>
      <td>False</td>
    </tr>
    <tr>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <td>61</td>
      <td>9</td>
      <td>11</td>
      <td>0.3585</td>
      <td>0.9</td>
      <td>-6.73</td>
      <td>7.4471</td>
      <td>False</td>
    </tr>
    <tr>
      <td>62</td>
      <td>9</td>
      <td>12</td>
      <td>2.2267</td>
      <td>0.9</td>
      <td>-4.4923</td>
      <td>8.9457</td>
      <td>False</td>
    </tr>
    <tr>
      <td>63</td>
      <td>10</td>
      <td>11</td>
      <td>-1.5082</td>
      <td>0.9</td>
      <td>-8.3215</td>
      <td>5.3051</td>
      <td>False</td>
    </tr>
    <tr>
      <td>64</td>
      <td>10</td>
      <td>12</td>
      <td>0.3599</td>
      <td>0.9</td>
      <td>-6.068</td>
      <td>6.7878</td>
      <td>False</td>
    </tr>
    <tr>
      <td>65</td>
      <td>11</td>
      <td>12</td>
      <td>1.8682</td>
      <td>0.9</td>
      <td>-4.8142</td>
      <td>8.5505</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
<p>66 rows √ó 7 columns</p>
</div>

<h2 id="results-2">Results</h2>

<p>At a significance level of alpha = 0.05, we reject the null hypothesis which states there is no relationship between time of year (season) and sales revenue or volume of units sold.</p>

<h1 id="conclusion--strategic-recommendations">Conclusion + Strategic Recommendations</h1>

<ul>
  <li>Conclusion &amp; Strategic Recommendations
    <ol>
      <li>5% is the minimum discount level needed to produce maximum results.
        <ul>
          <li>C: Offering discount levels &lt; or &gt; 5% either:
 a) has no effect on sales revenue and is therefore pointless
 b) increases loss in revenue despite higher order quantities that could have otherwise been achieved at only 5% discount (thereby maximizing revenue capture/minimizing loss).</li>
          <li>R: Stop offering any discount other than 5%.</li>
        </ul>
      </li>
      <li>
        <p>Continue to offer discounts in countries where they are effective in producing significantly higher order quantities. Stop offering discounts to countries where there is no effect on order quantities in order to minimize lost revenue.</p>
      </li>
      <li>
        <p>Focus sales and marketing efforts in regions that produce highest revenue; consider</p>
      </li>
      <li></li>
    </ol>
  </li>
  <li>Future Work
    <ul>
      <li>A. Gather and analyze critical missing data on customer types; investigate possible relationships between customer types and product categories (i.e. do certain customer types purchase certain</li>
      <li>C. Investigate possible relationship between regional revenues and shipping cost (i.e. is there a relationship between source (distributor) and destination (shipcountry) that might explain lower revenues in regions that are farther away in physical/geographic distance.</li>
    </ul>
  </li>
</ul>

<h1 id="future-work">Future Work</h1>

<p>Questions to explore in future analyses might include:</p>

<ol>
  <li>
    <p>Build a product recommendation tool</p>
  </li>
  <li>Create discounts or free shipping offers to increase sales volumes past a certain threshold.
    <ul>
      <li>Shipping Costs and Order Quantities/Sales Revenue
<em>Does shipping cost (freight) have a statistically significant effect on quantity? If so, at what level(s) of shipping cost?</em></li>
    </ul>
  </li>
  <li>Customer Type and Product Category</li>
</ol>

<p><em>Is there a relationship between type of customer and certain product categories? If so, we can run more highly targeted sales and marketing programs for increasing sales of certain products to certain market segments.</em></p>

<h1 id="metricks">metricks</h1>

<ol>
  <li>What were the top 3 selling products overall?</li>
  <li>Top 3 selling products by country?</li>
  <li>Top 3 selling products by region?</li>
  <li>How did we do in sales for each product category?</li>
  <li>Can we group customers into customer types (fill the empty database) and build a product recommendation tool?</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Extract revenue per product category
</span><span class="n">cur</span><span class="p">.</span><span class="n">execute</span><span class="p">(</span><span class="s">"""SELECT o.OrderId, o.CustomerId, od.ProductId, od.Quantity, od.UnitPrice, 
                od.Quantity*od.UnitPrice*(1-Discount) as Revenue, p.CategoryId, c.CategoryName
                FROM 'Order' o
                JOIN OrderDetail od 
                ON o.OrderId = od.OrderId
                JOIN Product p 
                ON od.ProductId = p.Id
                JOIN Category c
                ON p.CategoryId = c.Id
                ;"""</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">cur</span><span class="p">.</span><span class="n">fetchall</span><span class="p">())</span>
<span class="n">df</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">cur</span><span class="p">.</span><span class="n">description</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2155
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>OrderId</th>
      <th>CustomerId</th>
      <th>ProductId</th>
      <th>Quantity</th>
      <th>UnitPrice</th>
      <th>Revenue</th>
      <th>CategoryId</th>
      <th>CategoryName</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>10248</td>
      <td>VINET</td>
      <td>11</td>
      <td>12</td>
      <td>14.0</td>
      <td>168.0</td>
      <td>4</td>
      <td>Dairy Products</td>
    </tr>
    <tr>
      <td>1</td>
      <td>10248</td>
      <td>VINET</td>
      <td>42</td>
      <td>10</td>
      <td>9.8</td>
      <td>98.0</td>
      <td>5</td>
      <td>Grains/Cereals</td>
    </tr>
    <tr>
      <td>2</td>
      <td>10248</td>
      <td>VINET</td>
      <td>72</td>
      <td>5</td>
      <td>34.8</td>
      <td>174.0</td>
      <td>4</td>
      <td>Dairy Products</td>
    </tr>
    <tr>
      <td>3</td>
      <td>10249</td>
      <td>TOMSP</td>
      <td>14</td>
      <td>9</td>
      <td>18.6</td>
      <td>167.4</td>
      <td>7</td>
      <td>Produce</td>
    </tr>
    <tr>
      <td>4</td>
      <td>10249</td>
      <td>TOMSP</td>
      <td>51</td>
      <td>40</td>
      <td>42.4</td>
      <td>1696.0</td>
      <td>7</td>
      <td>Produce</td>
    </tr>
    <tr>
      <td>5</td>
      <td>10250</td>
      <td>HANAR</td>
      <td>41</td>
      <td>10</td>
      <td>7.7</td>
      <td>77.0</td>
      <td>8</td>
      <td>Seafood</td>
    </tr>
    <tr>
      <td>6</td>
      <td>10250</td>
      <td>HANAR</td>
      <td>51</td>
      <td>35</td>
      <td>42.4</td>
      <td>1261.4</td>
      <td>7</td>
      <td>Produce</td>
    </tr>
    <tr>
      <td>7</td>
      <td>10250</td>
      <td>HANAR</td>
      <td>65</td>
      <td>15</td>
      <td>16.8</td>
      <td>214.2</td>
      <td>2</td>
      <td>Condiments</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Group data by Category and get sum total revenue for each
</span><span class="n">df_category</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'CategoryName'</span><span class="p">])[</span><span class="s">'Revenue'</span><span class="p">].</span><span class="nb">sum</span><span class="p">().</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">df_category</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CategoryName</th>
      <th>Revenue</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>Beverages</td>
      <td>267868.1800</td>
    </tr>
    <tr>
      <td>1</td>
      <td>Condiments</td>
      <td>106047.0850</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Confections</td>
      <td>167357.2250</td>
    </tr>
    <tr>
      <td>3</td>
      <td>Dairy Products</td>
      <td>234507.2850</td>
    </tr>
    <tr>
      <td>4</td>
      <td>Grains/Cereals</td>
      <td>95744.5875</td>
    </tr>
    <tr>
      <td>5</td>
      <td>Meat/Poultry</td>
      <td>163022.3595</td>
    </tr>
    <tr>
      <td>6</td>
      <td>Produce</td>
      <td>99984.5800</td>
    </tr>
    <tr>
      <td>7</td>
      <td>Seafood</td>
      <td>131261.7375</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span><span class="p">.</span><span class="n">CategoryId</span><span class="p">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1    404
4    366
3    334
8    330
2    216
5    196
6    173
7    136
Name: CategoryId, dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Explore sample sizes before testing
</span><span class="n">categories</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'CategoryName'</span><span class="p">).</span><span class="n">groups</span>
<span class="n">categories</span><span class="p">.</span><span class="n">keys</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dict_keys(['Beverages', 'Condiments', 'Confections', 'Dairy Products', 'Grains/Cereals', 'Meat/Poultry', 'Produce', 'Seafood'])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_category</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df_category</span><span class="p">[</span><span class="s">'CategoryName'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'Beverages'</span><span class="p">][</span><span class="s">'Revenue'</span><span class="p">].</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>267868.17999999993
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#create dict of months and order quantity totals
</span><span class="n">rev_per_cat</span> <span class="o">=</span> <span class="p">{}</span>

<span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">categories</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="n">rev</span> <span class="o">=</span> <span class="n">df_category</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df_category</span><span class="p">[</span><span class="s">'CategoryName'</span><span class="p">]</span> <span class="o">==</span> <span class="n">k</span><span class="p">][</span><span class="s">'Revenue'</span><span class="p">].</span><span class="nb">sum</span><span class="p">()</span>
    <span class="n">rev_per_cat</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">rev</span>

<span class="n">rev_per_cat</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{'Beverages': 267868.17999999993,
 'Condiments': 106047.08500000002,
 'Confections': 167357.22499999995,
 'Dairy Products': 234507.285,
 'Grains/Cereals': 95744.58750000001,
 'Meat/Poultry': 163022.3595,
 'Produce': 99984.57999999999,
 'Seafood': 131261.73750000002}
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># plot order quantity totals by month
</span><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span>
<span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">rev_per_cat</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">bar</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">k</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="n">v</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="output_156_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># What were the top 3 selling product categories in each region or country?
# What were the lowest 3 selling product categories in each region or country?
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#                        
#             /\    _       _                            _                     * *    
#  /\_/\     /__\__|_|_____|_|__________________________| |________________________
#  [===]    / /\ \ | |  _  |  _  | _  \/ __/ -__|  \| |_   _| _  \ \_/ /| * _/| | |
#   \./    /_/  \_\|_| |_|_|_| |_|__/\_\ \______|_|\__| |_| |__/\_\___/ |_|\_\|_|_|
#                    | |             |___/        
#                    |_|   
</span></code></pre></div></div>
:ET