I"�y<p>The <code class="highlighter-rouge">Digdag Postgres</code> project demonstrates how to use <code class="highlighter-rouge">SQL queries</code> with <code class="highlighter-rouge">digdag</code> and <code class="highlighter-rouge">embulk</code> open source libraries for automation of ingesting and analyzing data using a PostgreSQL database.</p>

<h2 id="about-embulk-and-digdag">About Embulk and Digdag</h2>

<p>Embulk and Digdag are open source libraries for data ingestion and data pipeline orchestration, respectively. These libraries were invented at Treasure Data and are foundational to the Treasure Data product.</p>

<p><img src="https://img.shields.io/github/repo-size/alphasentaurii/digdag-postgres" alt="GitHub repo size" />
<img src="https://img.shields.io/github/license/alphasentaurii/digdag-postgres?color=black" alt="GitHub license" /></p>

<h2 id="prerequisites">Prerequisites</h2>

<p>Before you begin, ensure you have met the following requirements:</p>

<ul>
  <li>You have a <code class="highlighter-rouge">&lt;Windows/Linux/Mac&gt;</code> machine.</li>
  <li>You have access to <code class="highlighter-rouge">sudo</code> privileges</li>
</ul>

<h2 id="directory-structure">Directory structure</h2>

<p>This tutorial walks you through the creation of all necessary files and folders, as well as the installation and configuration steps for the pre-requisites such as JAVA 8 and postgreSQL.</p>

<p>The final directory structure will look like this (alternatively you can download and run the project with everything already done for you from my <a href="https://github.com/alphasentaurii/digdag-postgres">digdag-postgres</a> repo on Github.):</p>

<p>.
├── README.md
└── embulk_to_pg
      └── embulk_to_pg.dig
      └── tasks
            └── seed_customers.yml
            └── seed_pageviews.yml
            └── config_customers.yml
            └── config_pageviews.yml
      └── queries
            └── create_customers.sql
            └── update_customers.sql
            └── create_pageviews.sql
            └── count_pageviews.sql
            └── top_3_users.sql
      └── data
            └── customers
                  └── customers_1.csv
                  └── customers_2.csv
            └── pageviews
                  └── pageviews_1.csv
                  └── pageviews_2.csv</p>

<h3 id="installing-java-8">Installing Java 8</h3>

<p><em>Note: these are the steps for installing Java 8 from Oracle on an AWS remote server running Debian 10. If you’re using a different environment you will need to adjust accordingly.</em></p>

<p>Check which version of Java you’re running. If you get an runtime error saying Java is not installed (when you go to run digdag or embulk) follow the steps below.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>java <span class="nt">-version</span>
</code></pre></div></div>

<ol>
  <li>Download the tar file from <a href="https://www.oracle.com/java/technologies/javase/javase9-archive-downloads.html">Oracle</a>: jdk-9.0.4_linux-x64_bin.tar.gz</li>
  <li>Secure copy (<code class="highlighter-rouge">scp</code>) the tar file to the remote server</li>
  <li>Unzip tar file into your JVM directory (you may need to create first)</li>
  <li>Install Java</li>
  <li>Set Java directory</li>
  <li>Check version</li>
</ol>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo mkdir</span> /usr/lib/jvm

<span class="nv">$ </span><span class="nb">sudo tar </span>zxvf jre-8u261-linux-x64.tar.gz <span class="nt">-C</span> /usr/lib/jvm

<span class="nv">$ </span><span class="nb">sudo </span>update-alternatives <span class="nt">--install</span> <span class="s2">"/usr/bin/java"</span> <span class="s2">"java"</span> <span class="s2">"/usr/lib/jvm/jre1.8.0_261/bin/java"</span> 1

<span class="nv">$ </span><span class="nb">sudo </span>update-alternatives <span class="nt">--set</span> java /usr/lib/jvm/jre1.8.0_261/bin/java

<span class="nv">$ </span>java <span class="nt">-version</span>

java version <span class="s2">"1.8.0_261"</span>
Java<span class="o">(</span>TM<span class="o">)</span> SE Runtime Environment <span class="o">(</span>build 1.8.0_261-b12<span class="o">)</span>
Java HotSpot<span class="o">(</span>TM<span class="o">)</span> 64-Bit Server VM <span class="o">(</span>build 25.261-b12, mixed mode<span class="o">)</span>
</code></pre></div></div>

<h3 id="install-digdag">Install <code class="highlighter-rouge">digdag</code></h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-s</span>
<span class="nv">$ </span>curl <span class="nt">-o</span> ~/bin/digdag <span class="nt">--create-dirs</span> <span class="nt">-L</span> <span class="s2">"https://dl.digdag.io/digdag-latest"</span>
<span class="nv">$ </span><span class="nb">chmod</span> +x ~/bin/digdag
<span class="nv">$ </span><span class="nb">echo</span> <span class="s1">'export PATH="$HOME/bin:$PATH"'</span> <span class="o">&gt;&gt;</span> ~/.bashrc
</code></pre></div></div>

<h3 id="check-installation-was-successful">Check installation was successful</h3>

<p>Check to make sure <code class="highlighter-rouge">digdag</code> is installed correctly:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>digdag <span class="nt">--help</span>
</code></pre></div></div>

<h3 id="install-embulk">Install Embulk</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="nt">--create-dirs</span> <span class="nt">-o</span> ~/.embulk/bin/embulk <span class="nt">-L</span> <span class="s2">"https://dl.embulk.org/embulk-latest.jar"</span>
<span class="nv">$ </span><span class="nb">chmod</span> +x ~/.embulk/bin/embulk
<span class="nv">$ </span><span class="nb">echo</span> <span class="s1">'export PATH="$HOME/.embulk/bin:$PATH"'</span> <span class="o">&gt;&gt;</span> ~/.bashrc
<span class="nv">$ </span><span class="nb">source</span> ~/.bashrc
</code></pre></div></div>

<h2 id="install-plugins">Install Plugins</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>embulk gem <span class="nb">install </span>embulk-input-postgresql
<span class="nv">$ </span>embulk gem <span class="nb">install </span>embulk-output-postgresql
</code></pre></div></div>

<h3 id="install-postgres">Install Postgres</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>apt <span class="nb">install </span>postgresql postgresql-contrib
<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-u</span> postgres psql <span class="nt">-c</span> <span class="s2">"SELECT version();"</span>
</code></pre></div></div>

<p>The postgres user is created automatically when you install PostgreSQL. This user is the superuser for the PostgreSQL instance and it is equivalent to the MySQL root user.</p>

<h3 id="create-user-and-database">Create User and Database</h3>

<p>Use the <code class="highlighter-rouge">sudo</code> command to access the prompt without switching users. The postgres user is typically used only from the local host and it is recommended not to set the password for this user:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root:~/digdag-postgres/embulk_to_pg# su - postgres
postgres:~<span class="nv">$ </span>createuser <span class="nt">--interactive</span> <span class="nt">--pwprompt</span>
...
Enter name of role to add: digdag
Enter password <span class="k">for </span>new role: 
Enter it again: 
Shall the new role be a superuser? <span class="o">(</span>y/n<span class="o">)</span> y
...
<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-u</span> postgres psql
...
postgres&gt; createdb td_coding_challenge
postgres&gt; GRANT ALL privileges ON DATABASE td_coding_challenge TO digdag<span class="p">;</span>
postgres&gt; <span class="se">\q</span>
</code></pre></div></div>

<p>Enable remote access to PostgreSQL server</p>

<p>By default the PostgreSQL server listens only on the local interface 127.0.0.1. To enable remote access to your PostgreSQL server open the configuration file postgresql.conf and add listen_addresses = ‘*’ in the CONNECTIONS AND AUTHENTICATION section.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>vim /etc/postgresql/9.6/main/postgresql.conf

<span class="sb">`</span>i<span class="sb">`</span> <span class="c"># insert</span>
<span class="sb">`</span>esc :w<span class="sb">`</span> <span class="c"># write changes</span>
<span class="sb">`</span>:q<span class="sb">`</span> <span class="c"># close file</span>
<span class="c"># ...</span>
<span class="c"># /etc/postgresql/11/main/postgresql.conf</span>
<span class="c">#------------------------------------------------------------------------------</span>
<span class="c"># CONNECTIONS AND AUTHENTICATION</span>
<span class="c">#------------------------------------------------------------------------------</span>

<span class="c"># - Connection Settings -</span>

listen_addresses <span class="o">=</span> <span class="s1">'*'</span>     <span class="c"># what IP address(es) to listen on;</span>

</code></pre></div></div>

<p>Restart pg</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>service postgresql restart
</code></pre></div></div>

<p>Verify changes</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ss <span class="nt">-nlt</span> | <span class="nb">grep </span>5432
</code></pre></div></div>
<p>As you can see from the output above the PostgreSQL server is listening on all interfaces (0.0.0.0).</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>LISTEN   0         128                 0.0.0.0:5432             0.0.0.0:<span class="k">*</span>
LISTEN   0         128                    <span class="o">[</span>::]:5432                <span class="o">[</span>::]:<span class="k">*</span>
</code></pre></div></div>

<p>The last step is to configure the server to accept remote connections by editing the pg_hba.conf file.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>vim /etc/postgresql/11/main/pg_hba.conf

<span class="c"># TYPE  DATABASE        USER            ADDRESS                 METHOD</span>
host    all             digdag          127.0.0.1/32            md5

<span class="c"># Data Ingestion</span>

<span class="c">### Create digdag project</span>

<span class="sb">```</span>bash
<span class="nv">$ </span><span class="nb">mkdir </span>digdag-postgres
<span class="nv">$ </span><span class="nb">cd </span>digdag-postgres
<span class="nv">$ </span>digdag init embulk_to_pg
<span class="nv">$ </span><span class="nb">cd </span>embulk_to_pg
</code></pre></div></div>

<h2 id="create-embulk-scripts">Create EMBULK Scripts</h2>

<p><em>Requirements</em></p>

<ul>
  <li>Files that have a prefix of “customers” should ingest to a table called “customers_tmp”</li>
  <li>Files that have a prefix of “pageviews” should ingest to a table called “pageviews_tmp”</li>
  <li>Ensure that all records from all files are ingested to the appropriate tables.</li>
  <li>Any timestamps should be ingested to the database as <code class="highlighter-rouge">string/varchar</code></li>
</ul>

<h3 id="customers-embulk-script">Customers Embulk Script</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano seed_customers.yml
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># seed_customers.yml</span>
<span class="k">in</span>:
  <span class="nb">type</span>: file
  path_prefix: ./data/customers/
  parser:
    charset: UTF-8
    newline: CRLF
    <span class="nb">type</span>: csv
    delimiter: <span class="s1">','</span>
    <span class="s1">'quote:'</span>: <span class="s1">'"'</span>
    escape: null
    null_string: <span class="s1">'NULL'</span>
    skip_header_lines: 1
    columns:
    - <span class="o">{</span>name: user_id, <span class="nb">type</span>: string<span class="o">}</span>
    - <span class="o">{</span>name: first_name, <span class="nb">type</span>: string<span class="o">}</span>
    - <span class="o">{</span>name: last_name, <span class="nb">type</span>: string<span class="o">}</span>
    - <span class="o">{</span>name: job_title, <span class="nb">type</span>: string<span class="o">}</span>
    quote: <span class="s1">'"'</span>
    trim_if_not_quoted: <span class="nb">false
    </span>allow_extra_columns: <span class="nb">false
    </span>allow_optional_columns: <span class="nb">false
</span>out: 
  <span class="nb">type</span>: postgresql
  host: localhost
  user: digdag
  password: digdag
  database: treasure_data
  table: customers_tmp
  mode: insert_direct

</code></pre></div></div>

<h3 id="pageviews-embulk-script">Pageviews Embulk Script</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano seed_pageviews.yml
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># seed_pageviews.yml</span>
<span class="k">in</span>:
  <span class="nb">type</span>: file
  path_prefix: ./data/pageviews/
  parser:
    charset: UTF-8
    newline: CRLF
    <span class="nb">type</span>: csv
    delimiter: <span class="s1">','</span>
    <span class="s1">'quote:'</span>: <span class="s1">'"'</span>
    escape: null
    null_string: <span class="s1">'NULL'</span>
    skip_header_lines: 1
    columns:
    - <span class="o">{</span>name: user_id, <span class="nb">type</span>: string<span class="o">}</span>
    - <span class="o">{</span>name: url, <span class="nb">type</span>: string<span class="o">}</span>
    - <span class="o">{</span>name: user_agent, <span class="nb">type</span>: string<span class="o">}</span>
    - <span class="o">{</span>name: timestamp, <span class="nb">type</span>: string, format: varchar<span class="o">}</span>
    quote: <span class="s1">'"'</span>
    trim_if_not_quoted: <span class="nb">false
    </span>allow_extra_columns: <span class="nb">false
    </span>allow_optional_columns: <span class="nb">false
</span>out:
  <span class="nb">type</span>: postgresql
  host: localhost
  user: digdag
  password: digdag
  database: treasure_data
  table: pageviews_tmp 
  mode: insert_direct
  column_options: 
    user_id: <span class="o">{</span>value_type: string<span class="o">}</span>
    url: <span class="o">{</span>value_type: string<span class="o">}</span>
    user_agent: <span class="o">{</span>value_type: string<span class="o">}</span>
    timestamp: <span class="o">{</span>value_type: string, format: varchar<span class="o">}</span>
</code></pre></div></div>

<hr />

<h2 id="sql-queries">SQL Queries</h2>

<h3 id="customers-table">Customers Table</h3>

<p>Creates a new table called <code class="highlighter-rouge">customers</code> that:</p>
<ul>
  <li>Includes all columns from customers_tmp</li>
  <li>Parses the “user_agent” column to add a new column called ‘operating_system’ that contains one of the following values (“Windows”, “Macintosh”, “Linux”, or “Other”).</li>
</ul>

<p><code class="highlighter-rouge">create_customers.sql</code></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">--create_customers.sql--</span>
<span class="k">WITH</span> <span class="n">t</span> <span class="k">AS</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">user_id</span><span class="p">,</span> <span class="k">MAX</span><span class="p">(</span><span class="nb">timestamp</span><span class="p">)</span> <span class="k">as</span> <span class="nb">time</span> 
<span class="k">FROM</span> <span class="n">pageviews_tmp</span> 
<span class="k">GROUP</span> <span class="k">BY</span> <span class="n">user_id</span><span class="p">)</span>
<span class="p">,</span> <span class="n">s</span> <span class="k">AS</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">p</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span> <span class="n">p</span><span class="p">.</span><span class="n">user_agent</span><span class="p">,</span> <span class="n">p</span><span class="p">.</span><span class="nb">timestamp</span> 
  <span class="k">FROM</span> <span class="n">pageviews_tmp</span> <span class="n">p</span> 
  <span class="k">JOIN</span> <span class="n">t</span> <span class="k">ON</span> <span class="n">p</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">t</span><span class="p">.</span><span class="n">user_id</span> 
  <span class="k">AND</span> <span class="n">p</span><span class="p">.</span><span class="nb">timestamp</span> <span class="o">=</span> <span class="n">t</span><span class="p">.</span><span class="nb">time</span><span class="p">)</span> 
<span class="k">SELECT</span> <span class="k">c</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span> <span class="k">c</span><span class="p">.</span><span class="n">first_name</span><span class="p">,</span> <span class="k">c</span><span class="p">.</span><span class="n">last_name</span><span class="p">,</span> <span class="k">c</span><span class="p">.</span><span class="n">job_title</span><span class="p">,</span> <span class="n">s</span><span class="p">.</span><span class="n">user_agent</span> <span class="k">AS</span> <span class="n">operating_system</span> 
<span class="k">FROM</span> <span class="n">customers_tmp</span> <span class="k">c</span> 
<span class="k">JOIN</span> <span class="n">s</span> <span class="k">ON</span> <span class="k">c</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">s</span><span class="p">.</span><span class="n">user_id</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">update_customers.sql</code></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">--update_customers.sql</span>
<span class="k">UPDATE</span> <span class="n">customers</span> 
<span class="k">SET</span> <span class="n">operating_system</span> <span class="o">=</span> <span class="s1">'Macintosh'</span> 
<span class="k">WHERE</span> <span class="n">operating_system</span> <span class="k">LIKE</span> <span class="s1">'%Mac%'</span><span class="p">;</span>

<span class="k">UPDATE</span> <span class="n">customers</span> 
<span class="k">SET</span> <span class="n">operating_system</span> <span class="o">=</span> <span class="s1">'Linux'</span> 
<span class="k">WHERE</span> <span class="n">operating_system</span> <span class="k">LIKE</span> <span class="s1">'%X11%'</span><span class="p">;</span>

<span class="k">UPDATE</span> <span class="n">customers</span> 
<span class="k">SET</span> <span class="n">operating_system</span> <span class="o">=</span> <span class="s1">'Windows'</span> 
<span class="k">WHERE</span> <span class="n">operating_system</span> <span class="k">LIKE</span> <span class="s1">'%Windows%'</span><span class="p">;</span>

<span class="k">UPDATE</span> <span class="n">customers</span> 
<span class="k">SET</span> <span class="n">operating_system</span> <span class="o">=</span> <span class="s1">'Other'</span>
<span class="k">WHERE</span> <span class="n">operating_system</span> <span class="k">NOT</span> <span class="n">REGEXP</span> <span class="s1">'Macintosh|Linux|Windows'</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="pageviews-table">Pageviews Table</h3>

<p>Creates a new table called <code class="highlighter-rouge">pageviews</code> that:</p>
<ul>
  <li>Includes all columns from pageviews_tmp</li>
  <li>Excludes all records where job_title contains “Sales”</li>
</ul>

<p><code class="highlighter-rouge">create_pageviews.sql</code></p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">--create_pageviews.sql</span>
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">pageviews_tmp</span>
<span class="k">WHERE</span> <span class="n">user_id</span>
<span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="n">user_id</span>
    <span class="k">FROM</span> <span class="n">customers_tmp</span>
    <span class="k">WHERE</span> <span class="n">job_title</span> <span class="k">NOT</span> <span class="k">LIKE</span> <span class="s1">'%Sales%'</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="count-pageviews">Count Pageviews</h3>

<p>Returns the total number of pageviews from users who are browsing with a Windows operating system or have “Engineer” in their job title.</p>

<p><code class="highlighter-rouge">count_pageviews.sql</code></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">--count_pageviews.sql--</span>
<span class="k">SELECT</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">url</span><span class="p">)</span> <span class="k">AS</span> <span class="n">total_views</span> 
<span class="k">FROM</span> <span class="n">pageviews</span> 
<span class="k">WHERE</span> <span class="n">user_id</span> 
<span class="k">IN</span> <span class="p">(</span>
  <span class="k">SELECT</span> <span class="n">user_id</span> 
  <span class="k">FROM</span> <span class="n">customers</span> 
  <span class="k">WHERE</span> <span class="n">operating_system</span> <span class="o">=</span> <span class="s1">'Windows'</span> 
  <span class="k">OR</span> <span class="n">job_title</span> <span class="k">LIKE</span> <span class="s1">'%Engineer%'</span>
  <span class="p">)</span>
</code></pre></div></div>

<p>Returns:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+-------------+
| total_views |
+-------------+
|        456  |
+-------------+
1 row <span class="k">in </span><span class="nb">set</span> <span class="o">(</span>0.009 sec<span class="o">)</span>
</code></pre></div></div>

<h3 id="top-3-users-and-last-page-viewed">Top 3 Users and Last Page Viewed</h3>

<p>Returns top 3 user_id’s (ranked by total pageviews) who have viewed a web page with a “.gov” domain extension and the url of last page they viewed.</p>

<p><code class="highlighter-rouge">top_3_users.sql</code></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">--top_3_users.sql</span>
<span class="k">WITH</span> <span class="n">p2</span> <span class="k">AS</span> <span class="p">(</span>
	<span class="k">SELECT</span> <span class="n">user_id</span><span class="p">,</span> <span class="k">max</span><span class="p">(</span><span class="nb">timestamp</span><span class="p">)</span> <span class="n">last_timestamp</span> 
	<span class="k">FROM</span> <span class="n">pageviews</span> 
	<span class="k">WHERE</span> <span class="n">user_id</span> 
    <span class="k">IN</span> <span class="p">(</span>
        <span class="k">SELECT</span> <span class="n">user_id</span> 
        <span class="k">FROM</span> <span class="n">pageviews</span> 
        <span class="k">WHERE</span> <span class="n">url</span> <span class="k">LIKE</span> <span class="s1">'%.gov%'</span>
        <span class="p">)</span> 
	<span class="k">GROUP</span> <span class="k">BY</span> <span class="n">user_id</span> 
	<span class="k">ORDER</span> <span class="k">BY</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">url</span><span class="p">)</span> <span class="k">DESC</span> 
    <span class="k">LIMIT</span> <span class="mi">3</span><span class="p">)</span>
<span class="k">SELECT</span> <span class="n">user_id</span><span class="p">,</span> <span class="n">url</span> <span class="n">last_page_viewed</span> 
<span class="k">FROM</span> <span class="n">pageviews</span> 
<span class="k">WHERE</span> <span class="n">user_id</span> 
<span class="k">IN</span> <span class="p">(</span>
    <span class="k">SELECT</span> <span class="n">user_id</span> 
	<span class="k">FROM</span> <span class="n">p2</span> 
	<span class="k">WHERE</span> <span class="nb">timestamp</span><span class="o">=</span><span class="n">last_timestamp</span>
    <span class="p">)</span>
<span class="k">ORDER</span> <span class="k">BY</span> <span class="nb">timestamp</span> <span class="k">DESC</span><span class="p">;</span>
</code></pre></div></div>

<p>Returns:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+--------------------------------------+--------------------------------------------+
| user_id                              | last_page_viewed                           |
+--------------------------------------+--------------------------------------------+
| 5d9b8515-823e-49b8-ad44-5c91ef23462f | https://microsoft.com/morbi/porttitor.aspx |
| 6cf36c9e-1fa7-491d-a6e1-9c785d68a3d0 | http://nps.gov/quis/odio/consequat.json    |
| 752119fa-50dc-4011-8f13-23aa8d78eb18 | http://goo.ne.jp/nunc.html                 |
+--------------------------------------+--------------------------------------------+
3 rows <span class="k">in </span><span class="nb">set</span> <span class="o">(</span>0.011 sec<span class="o">)</span>
</code></pre></div></div>

<h2 id="write-a-digdag-workflow">Write a digdag workflow</h2>

<p>We created the directory and initial digdag project already (see above).</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>nano embulk_to_pg.dig
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># embulk_to_pg.dig</span>
timezone: UTC

_export:
  workflow_name: <span class="s2">"embulk_to_pg"</span>
  start_msg:     <span class="s2">"digdag </span><span class="k">${</span><span class="nv">workflow_name</span><span class="k">}</span><span class="s2"> start"</span>
  end_msg:       <span class="s2">"digdag </span><span class="k">${</span><span class="nv">workflow_name</span><span class="k">}</span><span class="s2"> finish"</span>
  error_msg:     <span class="s2">"digdag </span><span class="k">${</span><span class="nv">workflow_name</span><span class="k">}</span><span class="s2"> error"</span>
  pg:
    host: 127.0.0.1
    port: 5432
    user: digdag
    password_override: password
    database: treasure_data
    strict_transaction: <span class="nb">false</span>

+start:
  <span class="nb">echo</span><span class="o">&gt;</span>: <span class="k">${</span><span class="nv">start_msg</span><span class="k">}</span>

<span class="c"># Data Preparation</span>

+embulk_guess:
  _parallel: <span class="nb">true</span>

  +guess_customers:
    sh&gt;: embulk guess tasks/seed_customers.yml <span class="nt">-o</span> tasks/config_customers.yml

  +guess_pageviews:
    sh&gt;: embulk guess tasks/seed_pageviews.yml <span class="nt">-o</span> tasks/config_pageviews.yml

+embulk_run:
  _parallel: <span class="nb">true</span>
  
  +config_customers:
    sh&gt;: embulk run tasks/config_customers.yml

  +config_pageviews:
    sh&gt;: embulk run tasks/config_pageviews.yml

<span class="c"># Data Ingestion</span>

+create_tables:
  +create_customers:
    pg&gt;: queries/create_customers.sql
    create_table: customers

  +update_customers:
    pg&gt;: queries/update_customers.sql

  +create_pageviews:
    pg&gt;: queries/create_pageviews.sql
    create_table: pageviews

<span class="c"># Data Analysis</span>
+analysis:
  
  +count_pageviews:
    pg&gt;: queries/count_pageviews.sql
    store_last_results: all
  
  +print_q1:
    <span class="nb">echo</span><span class="o">&gt;</span>: <span class="k">${</span><span class="nv">pg</span><span class="p">.last_results</span><span class="k">}</span>

  +top_3_users:
    pg&gt;: queries/top_3_users.sql
    store_last_results: all

  +print_q2:
    <span class="nb">echo</span><span class="o">&gt;</span>: <span class="k">${</span><span class="nv">pg</span><span class="p">.last_results</span><span class="k">}</span>

<span class="c"># End of Workflow</span>
+end:
  <span class="nb">echo</span><span class="o">&gt;</span>: <span class="k">${</span><span class="nv">end_msg</span><span class="k">}</span>

_error:
  <span class="nb">echo</span><span class="o">&gt;</span>: <span class="k">${</span><span class="nv">error_msg</span><span class="k">}</span>
</code></pre></div></div>

<h2 id="run-digdag-workflow">Run Digdag workflow</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># If this isn't your first time running the workflow, use the --rerun flag </span>
<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-s</span>
<span class="nv">$ </span>digdag secrets <span class="nt">--local</span> <span class="nt">--set</span> pg.password<span class="o">=</span>digdag
<span class="nv">$ </span>digdag run embulk_to_pg.dig <span class="nt">-O</span> log/task

<span class="c"># Note: If this isn't your first time running the workflow, use the --rerun flag:*</span>
<span class="nv">$ </span>digdag run embulk_to_pg.dig <span class="nt">--rerun</span> <span class="nt">-O</span> log/task

<span class="c"># You can also have the workflow log to a text file instead of the command line</span>
<span class="c"># Be patient as the workflow takes a while and it will appear as if nothing is happening until you see the success message print out. </span>

<span class="nv">$ </span>digdag run embulk_to_pg.dig <span class="nt">--rerun</span> <span class="nt">-O</span> log/task <span class="o">&gt;</span> log.txt
</code></pre></div></div>

<h1 id="contact">Contact</h1>
<p>If you want to contact me you can reach me at rukeine@gmail.com.</p>

<h1 id="license">License</h1>
<p>This project uses the following license: MIT License.</p>
<h1 id="_-__-_---_">_ __ _   _</h1>
<h1 id="_--__---">/_/\ | ‘__| | | |</h1>
<h1 id="-----_-">[===] | |  | |_| |</h1>
<h1 id="-----__">./  |<em>|   _</em>,_|</h1>

:ET